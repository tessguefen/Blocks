<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "compresswhitespace">
	<MvASSIGN NAME = "l.module:code"		VALUE = "TGCOMPONENTS">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Components & Layouts">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Tess Guefen">
	<MvASSIGN NAME = "l.module:version"		VALUE = "1.004">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.00">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Create components to easily manipulate customized layouts.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store, util, component, json, clientside, provision_store, export">
</MvFUNCTION>

<MvCOMMENT>
	Change Log
	1.001
		UI Updates
		- Styled Top Level Components
		- Added Collapse Toggle
	1.002
		Bug Fixes
		- Import Issue with components with no attributes.
	1.003
		UI Updates
		- Added "datetime" attribute for a Date/Time picker. Returns timestamp.
	1.004
		Added Layout Caching! :sunglasses:
</MvCOMMENT>

<MvCOMMENT>
| ====================================================================================
|	INSTALL
| ====================================================================================
</MvCOMMENT>


<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Create TGComponents table.
	|
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponents
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								name			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								descrip			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								image			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								allow_children	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1000', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGComponents. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponents_1 ON ' $ g.Store_Table_Prefix $ 'TGComponents ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1001', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGComponents.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponents_2 ON ' $ g.Store_Table_Prefix $ 'TGComponents ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1002', 'Could not create an index on ' $ g.Store_Table_Prefix $ 'TGComponents.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGComponent_Attrs table.
	|
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								component_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								prompt			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								type			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								required		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1003', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs_1 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1004', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs_2 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs ( component_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1005', 'Could not create an index on ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGComponent_Options table.
	|
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Options
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								attr_id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								prompt			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								disp_order		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1006', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGComponent_Options. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Options_1 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Options ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1007', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGComponent_Options.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponent_Options_2 ON ' $ g.Store_Table_Prefix $ 'TGComponent_Options ( attr_id, prompt )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1008', 'Could not create an index on ' $ g.Store_Table_Prefix $ 'TGComponent_Options.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts table.
	|
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								name			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1009', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGLayouts. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1010', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGLayouts.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_2 ON ' $ g.Store_Table_Prefix $ 'TGLayouts ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1011', 'Could not create an index on ' $ g.Store_Table_Prefix $ 'TGLayouts.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts_Components table.
	|
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
							(
								id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								layout_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								component_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								name			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								parent			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								active			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1012', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGLayouts_Components. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Components_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1013', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGLayouts_Components.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Components_2 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ( parent, disp_order )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1014', 'Could not create an index on ' $ g.Store_Table_Prefix $ 'TGLayouts_Components.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts_Values table.
	|
	</MvCOMMENT>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values
							(
								layouts_components_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								attr_id				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								value				' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1015', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGLayouts_Values. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Values_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Values ( layouts_components_id, attr_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1016', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGLayouts_Values.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Create TGLayouts_Cache table
	|
	</MvCOMMENT>
	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
							(
								layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1017', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache. Please make sure this table was not already created.' ) }">
	</MvIF>

	<MvQUERY	NAME = "Merchant"
				QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache ( layout_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-INSTALL-1018', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache.' ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Store Keys
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponents', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2016', 'An error occured while creating the store key, TGComponents. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Attrs', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2017', 'An error occured while creating the store key, TGComponent_Attrs. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Attrs_Disp_Order', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2018', 'An error occured while creating the store key, TGComponent_Attrs_Disp_Order. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Options', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2019', 'An error occured while creating the store key, TGComponent_Options. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponent_Options_Disp_Order', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2020', 'An error occured while creating the store key, TGComponent_Options_Disp_Order. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayouts', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2021', 'An error occured while creating the store key, TGLayouts. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayouts_Components', 1 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2022', 'An error occured while creating the store key, TGLayouts_Components. Please make sure this does not already exsist.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Load_Privilege( 'TGCOMPONENTS', l.void ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Insert( 'TGCOMPONENTS', 'Components & Layouts Module' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'tgcomponent',  l.module:code ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Module_Uninstall_Store( l.module ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-INSTALL-2023', 'An error occured while creating the item tgcomponent.' ) }">
	</MvIF>


	<MvCOMMENT>
	|
	|	Sunshine, Lollipops And Rainbows
	|
	</MvCOMMENT>

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.version LT 1.004 }">
		<MvCOMMENT>
		|
		|	Create TGLayouts_Cache table
		|
		</MvCOMMENT>
		<MvQUERY	NAME = "Merchant"
					QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
								(
									layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
								)' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1001', 'An error occured while creating the table ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache. Please make sure this table was not already created.' ) }">
		</MvIF>

		<MvQUERY	NAME = "Merchant"
					QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache ( layout_id )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-UPGRADE-1002', 'Could not create a unique index on ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache.' ) }">
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponents'				}">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs'		}">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Options'		}">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts'			}">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components'	}">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values'	}">

	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents' ) 						}">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Attrs' )					}">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Attrs_Disp_Order' )		}">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents_Options' )				}">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents_Options_Disp_Order' )	}">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayouts' )					}">
	<MvASSIGN NAME = "l.success" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayouts_Components' )				}">

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvCOMMENT>
| ====================================================================================
|	UTIL
| ====================================================================================
</MvCOMMENT>


<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation"  PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].LeftNavigation_Dot( l.indent - 1, 'Screen=SUTL&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Module_Code=' $ encodeattribute( l.module:code ), 'Main', 'Components and Layouts' ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ g.TGCOMPONENTS_Screen }">
		<MvEVAL EXPR = "{ ComponentsScreen_UI( g.TGCOMPONENTS_Screen ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Components & Layouts', '', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Components & Layouts', '', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( 'TGCOMPONENTS', 'TGCOMPONENTS_Sets:Layouts,TGCOMPONENTS_Components:Components' ) }">

		<MvHIDE FIELDS = "g.Module_Code">

		<MvEVAL EXPR = "{ ComponentTab_UI( g.Tab ) }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
| ====================================================================================
|	JSON
| ====================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }"><MvFUNCTIONRETURN></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Components_Load_Query' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Components_Load_Query( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Component_Insert' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Component_Insert( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Component_Update' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Component_Update( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Component_Delete' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Component_Delete( l.module )	}"></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Layouts_Load_Query' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layouts_Load_Query( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Layout_Insert' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Insert( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Layout_Update' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Update( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Layout_Delete' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Delete( l.module )	}"></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Component_Attrs_Load_Query' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Component_Attrs_Load_Query( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Insert' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Insert( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Update' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Update( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Delete' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Delete( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_DisplayOrder_Update' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_DisplayOrder_Update( l.module ) }"></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Insert' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Insert( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Update' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Update( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Delete' }"><MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Delete( l.module )	}"></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Layout_Load_Components' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Load_Components( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Components_Load_All' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Components_Load_All( l.module )	}"></MvIF>
	<MvIF EXPR = "{ g.Module_Function EQ 'Layout_Save' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Save( l.module )	}"></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Layout_Duplicate' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Duplicate( l.module )	}"></MvIF>

	<MvIF EXPR = "{ g.Module_Function EQ 'Delete_Layout_Cache' }"><MvFUNCTIONRETURN VALUE = "{ JSON_Delete_Layout_Cache( l..module )	}"></MvIF>
</MvFUNCTION>

<MvCOMMENT>
| ====================================================================================
|	CLIENTSIDE
| ====================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Filename EQ 'components.js' }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
		<MvINCLUDE FILE = "js/components.js" INTERPRET="OFF">
	</MvIF>
	<MvIF EXPR = "{ g.Filename EQ 'layouts.js' }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
		<MvINCLUDE FILE = "js/layouts.js" INTERPRET="OFF">
	</MvIF>
	<MvIF EXPR = "{ g.Filename EQ 'component_attrs.js' }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
		<MvINCLUDE FILE = "js/component_attrs.js" INTERPRET="OFF">
	</MvIF>
	<MvIF EXPR = "{ g.Filename EQ 'angular.min.js' }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
		<MvINCLUDE FILE = "angular_app/angular.min.js" INTERPRET="OFF">
	</MvIF>
	<MvIF EXPR = "{ g.Filename EQ 'angular-ui-tree.min.js' }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
		<MvINCLUDE FILE = "angular_app/angular-ui-tree.min.js" INTERPRET="OFF">
	</MvIF>
	<MvIF EXPR = "{ g.Filename EQ 'app.js' }">
		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
		<MvINCLUDE FILE = "angular_app/app.js" INTERPRET="OFF">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
| ====================================================================================
|	COMPONENT
| ====================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MVFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, settings var, item_settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Parse_Function_Parameters( l.param, l.function_name, l.parameters, l.parameter_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.function_name EQ 'layout_load_code' }">
		<MvIF EXPR = "{ l.parameter_count NE 2 }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'There must be two parameters.' ) }">
		</MvIF>
		<MvIF EXPR = "{ NOT Is_Variable( l.parameters[2] ) }">
			<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'The second parameter must be a variable' ) }">
		</MvIF>
		<MvASSIGN NAME = "l.new_param" VALUE = "{ 'Item_Runtime_Load_Layout( l.module, l.param, ' $ l.parameters $ ')' }">
	</MvIF>

	<MvIF EXPR = "{ NOT l.new_param }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvASSEMBLY>
		.string asm_0 "l.new_param"
		.string asm_1 "g.Module_Root"
		.string asm_2 "l.module"
		.string asm_3 "module"
		.string asm_4 "g.MvDO_Error"

			pushc		asm_1
			pushn
			pushc		asm_2
			pushn
			pushc		asm_3
			memb_ro
			cat
			pushc		asm_0
			pushn
			tagerror	22, 0
			do_function
			pop
			tagerror	22, 3
			pushc		asm_4
			pushn
			jmp_eq		L_asm_success
			retn
		L_asm_success:				
    </MvASSEMBLY>

</MvFUNCTION>


<MvCOMMENT>
| ====================================================================================
|	provision_store
| ====================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'layout_add' }">
			<MvEVAL EXPR = "{ Module_Provision_Layout_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'layout_update'}">
			<MvEVAL EXPR = "{ Module_Provision_Layout_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_add'}">
			<MvEVAL EXPR = "{ Module_Provision_Component_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_update'}">
			<MvEVAL EXPR = "{ Module_Provision_Component_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_delete'}">
			<MvEVAL EXPR = "{ Module_Provision_Component_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_add'}">
			<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_update'}">
			<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_delete'}">
			<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattributeoption_add'}">
			<MvEVAL EXPR = "{ Module_Provision_ComponentAttributeOption_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'layoutcomponent_add'}">
			<MvEVAL EXPR = "{ Module_Provision_LayoutComponent_Add( l.module, l.child_xml ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
| ====================================================================================
|	export
| ====================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "ExportModule_Export" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Exp_Count" VALUE = "1" />

	<MvIF EXPR = "{ NOT g.Export_Continue }">
		<MvIF EXPR = "{ fexists( '/' $ g.Export_File ) }">
			<MvASSIGN NAME = "l.success" VALUE = "{ fdelete( '/' $ g.Export_File ) }">
		</MvIF>
		<MvASSIGN NAME = "l.wrapper" VALUE = "<Module code=\"TGCOMPONENTS\" feature=\"util\">">
		<MvASSIGN NAME = "l.success" VALUE = "{ file_create( '/' $ g.Export_File, 'data', l.wrapper ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Start( 'Components Export Progress', 'EXPT' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Show() }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ Export_Provisioning_Components( l.output ) }">
	<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Start( 'Layouts Export Progress', 'EXPT' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Show() }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ Export_Provisioning_Layouts( l.output ) }">
	</MvIF>

	<MvASSIGN NAME = "l.success" VALUE = "{ file_append( '/' $ g.Export_File, 'data', l.output ) }">

	<MvIF EXPR = "{ NOT g.Export_Continue }">
		<MvASSIGN NAME = "l.wrapper" VALUE = "</Module>">
		<MvASSIGN NAME = "l.success" VALUE = "{ file_append( '/' $ g.Export_File, 'data', l.wrapper ) }">
		<MvIF EXPR = "{ g.Export_SendEmail }">
			<MvDO FILE = "{ g.Module_Library_Utilities }" NAME = "l.void" VALUE = "{ Send_Email_Attachment( g.Export_Email, g.Export_Email, '', 'Components & Layouts Export', g.Export_File, '/', 'data' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'TGCOMPONENTS-SUCCESS-1', 'Review Export Email Sent' ) }">
		</MvIF>

		<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_ProgressComplete( 'Exported Components.' ) }">
		<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_ProgressComplete( 'Exported Layouts.' ) }">
		</MvIF>
	
		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'TGCOMPONENTS-SUCCESS-2', 'Reviews Exported to ' $ g.Export_File  ) }">
	</MvIF>

	<MvHIDE FIELDS = "	g.Exp_Offset,
						g.Export_Continue,
						g.Module_Code,
						g.Exp_Count,
						g.Offset,
						g.Export_File,
						g.Export_SendEmail,
						g.Export_Email,
						g.Total_Count,
						g.Current_Export">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ExportModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Export_File"	VALUE = "{ trim( g.Export_File ) }">
	<MvASSIGN NAME = "g.Current_Export" VALUE = "{ trim( g.Current_Export ) }">

	<MvIF EXPR = "{ len( g.Export_File ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_File', 'Please specify a file' ) }">
	<MvELSE>
		<MvIF EXPR = "{ '/' IN g.Export_File }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_File', 'Please do not include a path in the file name' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.Export_Email" 	VALUE = "{ trim( g.Export_Email ) }">

	<MvIF EXPR = "{ g.Export_SendEmail }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( g.Export_Email ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_Email', 'Please specify a valid email address' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Current_Export }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Current_Export', 'Please select an export.' ) }">
	<MvELSEIF EXPR = "{ g.Current_Export NE 'COMPONENTS' AND g.Current_Export NE 'LAYOUTS' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Current_Export', 'Please select an export.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ExportModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Export_File }">
		<MvASSIGN NAME = "g.Export_File" VALUE = "component_layouts.xml">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Current_Export }">
		<MvASSIGN NAME = "g.Current_Export" VALUE = "COMPONENTS" />
	</MvIF>

	<MvIF EXPR = "{ g.Export_Continue EQ 1 }">
		<script type="text/javascript">
			function exp_continue()
			{
				document.forms[ Screen ].submit();
			}
			window.onload = exp_continue;
		</script>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_End() }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Export Components & Layouts to XML', 'EXPT', '' ) }">
		<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_JavaScript( 'Exporting Components...', 'EXPT', 'EXPT' ) }">
		<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_JavaScript( 'Exporting Layouts...', 'EXPT', 'EXPT' ) }">
		</MvIF>
			
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Export Components &amp; Layouts to XML', 'EXPT', '' ) }">
		<MvDO FILE = "{ g.Module_Admin }" NAME = "l.ok" VALUE = "{ BeginContent() }">

		<div style="font-family: sans-serif;">
			<MvHIDE FIELDS = "g.Module_Code">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Draw_FieldSet_Open( 'Export Settings', 150 ) }">
				<table cellspacing="5">
					<tr>
						<td valign="top"><strong>Export Components & Layouts to File:</strong></td>
						<td width="100%">
							<input type="text" name="Export_File" size="40" value="{ encodeentities( g.Export_File ) }"><br />
							<em>This is located in the private directory. This will be deleted if it already exists.</em>
						</td>
					</tr>
					<tr>
						<td valign="top"><strong>Export:</strong></td>
						<td width="100%">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Current_Export', 'COMPONENTS', g.Current_Export, 'Components' ) }"><br />
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Current_Export', 'LAYOUTS', g.Current_Export, 'Layouts' ) }"><br />
						</td>
					</tr>
					<tr>
						<td valign="top">Email File To:</td>
						<td width="100%">
							<MvIF EXPR = "{ NOT g.Export_SendEmail }">
								<label><input type="radio" name="Export_SendEmail" value="0" checked>Do Not Email<br></label>
								<input type="radio" name="Export_SendEmail" value="1">
							<MvELSE>
								<label><input type="radio" name="Export_SendEmail" value="0">Do Not Email<br></label>
								<input type="radio" name="Export_SendEmail" value="1" checked>
							</MvIF>
							<MvIF EXPR = "{ ISNULL g.Export_Email }">
								<MvASSIGN NAME = "g.Export_Email" VALUE = "{ g.Store:email }">
							</MvIF>
							<input type="text" size="40" name="Export_Email" value="{ encodeentities( g.Export_Email ) }">
						</td>
					</tr>
				</table>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Draw_FieldSet_Close() }">
		</div>
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_HTML() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Buttons( 'Export', 'EXPT' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvINCLUDE FILE = "admin_components.mv">
<MvINCLUDE FILE = "layout_functions.mv">
<MvINCLUDE FILE = "component.mv">
<MvINCLUDE FILE = "functions.mv">
<MvINCLUDE FILE = "export.mv">
<MvINCLUDE FILE = "provisioning.mv">