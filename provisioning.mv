<MvCOMMENT>
	Module_Provision_Layout_Add( module var, provide_xml var )
	Module_Provision_Layout_Update( module var, provide_xml var )
	Module_Provision_Layout_Delete( module var, provide_xml var )
	Module_Provision_Component_Add( module var, provide_xml var )
	Module_Provision_Component_Update( module var, provide_xml var )
	Module_Provision_Component_Delete( module var, provide_xml var )
	Module_Provision_ComponentAttribute_Add( module var, provide_xml var )
	Module_Provision_ComponentAttribute_Update( module var, provide_xml var )
	Module_Provision_ComponentAttribute_Delete( module var, provide_xml var )
	Module_Provision_ComponentAttributeOption_Add( module var, provide_xml var )
	Module_Provision_LayoutComponent_Add( module var, provide_xml var )
	Module_Provision_LayoutComponent_Attributes( provide_xml var, layout_component_id, component_id )
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Layout_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<Layout_Add>
			<Code>Your_Code_Here</Code>
			<Name>Your Name Here</Name>
		</Layout_Add>

	</MvCOMMENT>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 'R', l.provide_xml, 'Code', l.layout:code )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Name', l.layout:name ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Insert( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>


<MvFUNCTION NAME = "Module_Provision_Layout_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<Layout_Update code="Your_Code_Here">
			<Code>Your_New_Code_Here</Code>
			<Name>Your New Name Here</Name>
		</Layout_Update>
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_Code( l.code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Layout with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 'O', l.provide_xml, 'Code', l.layout:code )	OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Name', l.layout:name ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Update( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Layout_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<Layout_Delete code="Your_Code_Here" />
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_Code( l.code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Layout with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Delete( l.layout:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Component_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<Component_Add>
			<Code>Your_Code_Here</Code>
			<Name>Your Name Here</Name>
			<Descrip>Your Description</Descrip>
			<Image>graphics/00000001/leia.png</Image>
			<Allow_Nest>1</Allow_Nest>
		</Component_Add>
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'R', l.provide_xml, 'Code',			l.component:code )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'R', l.provide_xml, 'Name',			l.component:name )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Descrip',		l.component:descrip )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Image',		l.component:image )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'R', l.provide_xml, 'Allow_Nest',	l.component:allow_children ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Insert( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Component_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<Component_Update code="My_Old_Code_Here">
			<Code>Your_Code_Here</Code>
			<Name>Your Name Here</Name>
			<Descrip>Your Description</Descrip>
			<Image>graphics/00000001/leia.png</Image>
			<Allow_Nest>1</Allow_Nest>
		</Component_Update>
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'O', l.provide_xml, 'Code',			l.component:code )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Name',			l.component:name )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml, 'Descrip',		l.component:descrip )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text(		'O', l.provide_xml, 'Image',		l.component:image )		OR 
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean(	'O', l.provide_xml, 'Allow_Nest',	l.component:allow_children ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_Component_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<Component_Delete code="My_Code_Here" />	
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml, 'code', l.code ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Delete( l.component:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>
<MvFUNCTION NAME = "Module_Provision_ComponentAttribute_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<ComponentAttribute_Add component="My_Component">
			<Code>MyAttribute</Code>
			<Prompt>My Prompt</Prompt>
			<Type>image</Type>
			<Required>1</Required>
		</ComponentAttribute_Add>	
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component',	l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.componentattribute" MEMBER = "component_id" VALUE = "{ l.component:id }" />

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'R', l.provide_xml,	'Code',		l.componentattribute:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'R', l.provide_xml,	'Prompt',	l.componentattribute:prompt )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'R', l.provide_xml,	'Type',		l.componentattribute:type, 'text,radio,select,checkbox,memo,image,product,category,link,imagetype', 'text,radio,select,checkbox,memo,image,product,category,link,imagetype' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'R', l.provide_xml,	'Required',	l.componentattribute:required ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Insert( l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttribute_Update" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<ComponentAttribute_Update component="My_Component" code="Attribute_Code">
			<Code>MyAttribute</Code>
			<Prompt>My Prompt</Prompt>
			<Type>image</Type>
			<Required>1</Required>
		</ComponentAttribute_Update>	
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component:id, l.code, l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component Attribute with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Code( 		'O', l.provide_xml,	'Code',		l.componentattribute:code )		OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 		'O', l.provide_xml,	'Prompt',	l.componentattribute:prompt )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 		'O', l.provide_xml,	'Type',		l.componentattribute:type, 'text,radio,select,checkbox,memo,image,product,category,link,imagetype', 'text,radio,select,checkbox,memo,image,product,category,link,imagetype' )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 	'O', l.provide_xml,	'Required',	l.componentattribute:required ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Update( l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttribute_Delete" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<ComponentAttribute_Delete component="My_Component" code="Attribute_Code" />
		
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component:id, l.code, l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component Attribute with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Delete( l.componentattribute:id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_ComponentAttributeOption_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<ComponentAttributeOption_Add component="My_Component" code="Attribute_Code">
			<Prompt>My Prompt</Prompt>
		</ComponentAttributeOption_Add>	
		
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'code', l.code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component:id, l.code, l.componentattribute ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component Attribute with the code \'' $ l.code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Prompt', l.componentattributeoption:prompt ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	<MvASSIGN NAME = "l.componentattributeoption" MEMBER = "attr_id" VALUE = "{ l.componentattribute:id }">
	
	<MvIF EXPR = "{ NOT ComponentOption_Insert( l.componentattributeoption ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_LayoutComponent_Add" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		<LayoutComponent_Add layout="My_Layout_Code" component="Component_Code">
			<Name>Name</Name>
			<Active>1</Active>
			<Parent>Some Parent</Parent>
			<Attributes>
				<Attribute code="MyAttribute">
					<Value>My Value Here</Value>
				</Attribute>
				<Attribute code="MyAttributeLink">
					<LinkType>Product</LinkType>
					<Value>My Value Here</Value>
				</Attribute>
			</Attributes>
		</LayoutComponent_Add>	
		
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'layout', l.layout_code ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml,	'component', l.component_code ) }">
		<MvFUNCTIONRETURN>
	</MvIF>


	<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml, 'Name', l.layout_component:name )	OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Boolean( 'O', l.provide_xml, 'Active',	l.layout_component:active ) OR
					NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'O', l.provide_xml, 'Parent',	l.layout_component:parent_name ) }">
		<MvFUNCTIONRETURN />
	</MvIF>

	
	<MvIF EXPR = "{ NOT Layout_Load_Code( l.layout_code, l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Layout with the code \'' $ l.layout_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_Code( l.component_code, l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Component with the code \'' $ l.component_code $ '\' does not exist' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL l.layout_component:parent_name }">
		<MvIF EXPR = "{ NOT LayoutComponentParent_Load_Name( l.layout_component:parent_name, l.layout:id, l.loaded_parent ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Could not load Parent with name \'' $ l.layout_component:parent_name $ '\' in layout \'' $ l.layout:code $ '\'.' ) }">
		</MvIF>
		<MvASSIGN NAME = "l.layout_component" MEMBER = "parent" VALUE = "{ l.loaded_parent:id }">
	</MvIF>
	
	<MvIF EXPR = "{ NOT Components_Attrs_Load_All_ID( l.component:id, l.component:attributes ) }">
		<MvCOMMENT>
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Could not load attribute for component' ) }">
		</MvCOMMENT>
	</MvIF>

	<MvASSIGN NAME = "l.component_attribute_count" VALUE = "{ miva_array_elements( l.component:attributes ) }">

	<MvIF EXPR = "{ l.component_attribute_count GT 0 }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Exists( l.provide_xml, 'Attributes' ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, 'Missing required tag Attributes' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.layout_component" MEMBER = "layout_id"		VALUE = "{ l.layout:id }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "component_id"	VALUE = "{ l.component:id }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "disp_order"		VALUE = "{ LayoutComponent_DispOrder_Last( l.layout_component:id, l.layout_component:parent_id ) }">

	<MvIF EXPR = "{ NOT LayoutComponent_Insert( l.layout_component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvIF EXPR = "{ l.component_attribute_count GT 0 }">
		<MvIF EXPR = "{ NOT Module_Provision_LayoutComponent_Attributes( l.provide_xml:tags:Attributes[ 1 ], l.layout_component:id, l.layout_component:component_id ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ LayoutComponent_Delete( l.layout_component:id ) }">
			<MvIF EXPR = "{ g.TGCOMPONENTS_Error:message }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml, g.TGCOMPONENTS_Error:message ) }">
			</MvIF>
			<MvFUNCTIONRETURN />
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provision_LayoutComponent_Attributes" PARAMETERS = "provide_xml var, layout_component_id, component_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.child_pos"			VALUE = 1>
	<MvASSIGN NAME = "l.child_count"		VALUE = "{ miva_array_elements( l.provide_xml:children ) }">
	<MvWHILE EXPR = "{ l.child_pos LE l.child_count }">
		<MvASSIGN NAME = "l.name"			VALUE = "{ tolower( l.provide_xml:children[ l.child_pos ]:name ) }">

		<MvIF EXPR = "{ l.name NE 'attribute' }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:children[ l.child_pos ], 'Unknown tag' ) }">
		</MvIF>

		<MvASSIGN NAME = "l.option" VALUE = "">

		<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Attribute_Text( l.provide_xml:children[ l.child_pos ], 'code', l.option:code ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvIF EXPR = "{ NOT ComponentAttrs_Load_Code( l.component_id, l.option:code, l.option:componentattribute ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Feature_PRV_AD ].PRV_LogMessage( l.provide_xml:children[ l.child_pos ], 'Component Attribute with the code \'' $ l.option:code $ '\' does not exist' ) }">
		</MvIF>

		<MvIF EXPR = "{ l.option:componentattribute:type EQ 'link' }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_List( 'R', l.provide_xml:children[ l.child_pos ], 'LinkType', l.option:_value:type, 'None,URL,Product,Category,Page', 'N,U,P,C,G' ) }">
				<MvFUNCTIONRETURN />
			</MvIF>
			<MvIF EXPR = "{ l.option:_value:type NE 'N' }">
				<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml:children[ l.child_pos ], 'Value', l.option:_value:value ) }">
					<MvFUNCTIONRETURN />
				</MvIF>
			</MvIF>
			<MvASSIGN NAME = "l.option" MEMBER = "value" VALUE = "{ miva_array_serialize( l.option:_value ) }" />
		<MvELSE>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_PRV_AD ].PRV_Tag_Text( 'R', l.provide_xml:children[ l.child_pos ], 'Value', l.option:value ) }">
				<MvFUNCTIONRETURN />
			</MvIF>

			<MvIF EXPR = "{ l.option:componentattribute:type EQ 'product' }">
				<MvASSIGN NAME = "l.option:_product:id" VALUE = "0" />
				<MvASSIGN NAME = "l.option:_product:code" VALUE = "{ l.option:value }" />
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.option:_product:code, l.loaded_product ) }">
					<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ 'Product Code \'' $ l.option:_product:code $ '\' was not found.' }">
					<MvFUNCTIONRETURN />
				</MvIF>
				<MvASSIGN NAME = "l.option:_product:id" VALUE = "{ l.loaded_product:id }" />
				<MvASSIGN NAME = "l.option" MEMBER = "value" VALUE = "{ miva_array_serialize( l.option:_product ) }" />
			<MvELSEIF EXPR = "{ l.option:componentattribute:type EQ 'category' }">
				<MvASSIGN NAME = "l.option:_category:id" VALUE = "0" />
				<MvASSIGN NAME = "l.option:_category:code" VALUE = "{ l.option:value }" />
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Category_Load_Code( l.option:_category:code, l.loaded_category ) }">
					<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ 'Category Code \'' $ l.option:_category:code $ '\' was not found.' }">
					<MvFUNCTIONRETURN />
				</MvIF>
				<MvASSIGN NAME = "l.option:_category:id" VALUE = "{ l.loaded_category:id }" />
				<MvASSIGN NAME = "l.option" MEMBER = "value" VALUE = "{ miva_array_serialize( l.option:_category ) }" />
			<MvELSEIF EXPR = "{ l.option:componentattribute:type EQ 'imagetype' }">
				<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].ImageType_Load_Code( l.option:value, l.imagetype ) }">
					<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message" VALUE = "{ 'Image Type Code \'' $ l.option:value $ '\' was not found.' }">
					<MvFUNCTIONRETURN />
				</MvIF>
				<MvASSIGN NAME = "l.option:value" VALUE = "{ l.imagetype:id }">
			</MvIF>

		</MvIF>

		<MvASSIGN NAME = "l.option_count" VALUE = "{ l.option_count + 1 }">
		<MvASSIGN NAME = "l.option"	MEMBER = "layouts_components_id"	VALUE = "{ l.layout_component_id }">
		<MvASSIGN NAME = "l.option"	MEMBER = "attr_id"					VALUE = "{ l.option:componentattribute:id }">

		<MvIF EXPR = "{ NOT LayoutValue_Update( l.option ) }">
			<MvFUNCTIONRETURN>
		</MvIF>

		<MvASSIGN NAME = "l.child_pos"		VALUE = "{ l.child_pos + 1 }">
	</MvWHILE>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>
