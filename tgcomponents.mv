<MIVA STANDARDOUTPUTLEVEL = "" IDENT = "$Id: tgcomponents.mv 64781 2019-05-29 21:39:05Z tguefen $">

<MvCOMMENT>
|
| Prefix			: MER-UTL-CAL
| Next Error Code	: 1
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.module:code"		VALUE = "TGCOMPONENTS">
	<MvASSIGN NAME = "l.module:name"		VALUE = "Components & Layouts">
	<MvASSIGN NAME = "l.module:provider"	VALUE = "Tess Guefen">
	<MvASSIGN NAME = "l.module:version"		VALUE = "1.015">
	<MvASSIGN NAME = "l.module:api_ver"		VALUE = "9.12">
	<MvASSIGN NAME = "l.module:description"	VALUE = "Create components to easily manipulate customized layouts.">
	<MvASSIGN NAME = "l.module:features"	VALUE = "data_store, util, component, json, clientside, provision_store, export, scheduledtask">
</MvFUNCTION>

<MvCOMMENT>
	Change Log
	1.001
		UI Updates
		- Styled Top Level Components
		- Added Collapse Toggle
	1.002
		Bug Fixes
		- Import Issue with components with no attributes.
	1.003
		UI Updates
		- Added "datetime" attribute for a Date/Time picker. Returns timestamp.
	1.004
		Added Layout Caching! :sunglasses:
	1.005
		- Fixed UI issue with Radio buttons.
	1.006
		- Added Date Cached
		- Added Date Start/ End per Layout> Components
	1.007
		- Actually Added Scheduling
		- Added Scheduled Task
	1.008
		- Updated PRV tags
		- Updated api_ver
	1.009
		- Added Check for Layout Cache for Start/End Dates per Layout on Runtime Call
		- Display Order for Components (o.m.g.)
	1.010
		- Array Field Type
	1.011
		- Added Export Option for All Layouts, or a specific layout
		- Made 'multitext' textarea larger.
	1.012
		- Max wins, column code added
	1.013
		- Minor bug fix (display order of Component Attributes)
		- Updated `Code` display on Layout Edit
		- Fixed left over data in previous modal issue (since )
	1.014
		- Major clean up / formatting
		- Added int() on certain values when inserting via lowlevel functions
	1.015
		- Security Bug Fixes Release
		- Minor XML Import Bug fix
	2.00
		- Major changes
</MvCOMMENT>

<MvCOMMENT>
|
|	data_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Install_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	sNN_TGComponents
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponents
							(
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
								name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								descrip		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
								image		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								children	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponents_1 ON ' $ g.Store_Table_Prefix $ 'TGComponents ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponents_2 ON ' $ g.Store_Table_Prefix $ 'TGComponents ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	sNN_TGComponentAttributes
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponentAttributes
							(
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								cmpnt_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
								prompt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								type		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								required	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponentAttributes_1 ON ' $ g.Store_Table_Prefix $ 'TGComponentAttributes ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponentAttributes_2 ON ' $ g.Store_Table_Prefix $ 'TGComponentAttributes ( cmpnt_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	sNN_TGComponentOptions
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGComponentOptions
							(
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								attr_id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								prompt		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$'
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGComponentOptions_1 ON ' $ g.Store_Table_Prefix $ 'TGComponentOptions ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGComponentOptions_2 ON ' $ g.Store_Table_Prefix $ 'TGComponentOptions ( attr_id, prompt )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	sNN_TGLayouts
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts
							(
								id		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ ',
								name	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_1 ON ' $ g.Store_Table_Prefix $ 'TGLayouts ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayouts_2 ON ' $ g.Store_Table_Prefix $ 'TGLayouts ( code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	sNN_TGLayoutComponents
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents
							(
								id			' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								cmpnt_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								name		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 )		$ ',
								parent		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								active		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL()			$ ',
								disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								dt_start	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
				 				dt_end		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
				 				code		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 )		$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayoutComponents_1 ON ' $ g.Store_Table_Prefix $ 'TGLayoutComponents ( id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayoutComponents_2 ON ' $ g.Store_Table_Prefix $ 'TGLayoutComponents ( parent, disp_order )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE INDEX ' $ g.Store_Table_Prefix $ 'TGLayoutComponents_3 ON ' $ g.Store_Table_Prefix $ 'TGLayoutComponents ( layout_id, code )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	sNN_TGLayoutValues
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutValues
							(
								lc_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								attr_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								value	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayoutValues_1 ON ' $ g.Store_Table_Prefix $ 'TGLayoutValues ( lc_id, attr_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	sNN_TGLayoutCache
	|
	</MvCOMMENT>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutCache
							(
								layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
								value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ ',
								dt_cached	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ '
							)' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME = "Merchant"
			 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayoutCache_1 ON ' $ g.Store_Table_Prefix $ 'TGLayoutCache ( layout_id )' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Store Keys
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponents', 1 )						OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentDisplayOrder', 1 )				OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentAttributes', 1 )				OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentAttributeDisplayOrder', 1 )	OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentOptions', 1 )					OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentOptionDisplayOrder', 1 )		OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayouts', 1 )							OR
					NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayoutComponents', 1 ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Load_Privilege( 'TGCOMPONENTS', l.null ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Error_Is_EOF() }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].DomainPrivilege_Insert( 'TGCOMPONENTS', 'Components & Layouts Module' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].Item_Load_Code( 'tgcomponent', l.item ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_Item( 'tgcomponent', l.module:code ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "module var, version" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.version LT 1.004 }">
		<MvCOMMENT>
		|
		|	sNN_TGLayouts_Cache
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'CREATE TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutCache
								(
									layout_id	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 )	$ ',
									value		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO()			$ '
								)' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'CREATE UNIQUE INDEX ' $ g.Store_Table_Prefix $ 'TGLayoutCache_1 ON ' $ g.Store_Table_Prefix $ 'TGLayoutCache ( layout_id )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 1.006 }">
		<MvCOMMENT>
		|
		|	Add Timestamp for when it was last cached.
		|
		</MvCOMMENT>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache
				 				ADD
				 				(
				 					dt_cached	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
				 				ADD
				 				(
				 					dt_start	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 ) $ ',
				 					dt_end		' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 255 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Cache_DeleteAll() }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 1.009 }">
		<MvCOMMENT>
		|
		|	Add display_order for sNN_TGComponents
		|
		</MvCOMMENT>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponents
				 				ADD
				 				(
				 					disp_order	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponents_Disp_Order', 1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Update default Display Order
		|
		</MvCOMMENT>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "TGComponents"
					QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents' }">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvWHILE EXPR = "{ NOT TGComponents.d.EOF }">
			<MvEVAL EXPR = "{ Component_Read( l.component ) }">
			<MvASSIGN NAME = "l.component:disp_order" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Disp_Order' ) }">

			<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
				<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvSKIP NAME = "Merchant" VIEW = "TGComponents" ROWS = 1>
		</MvWHILE>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 1.012 }">
		<MvCOMMENT>
		|
		|	Add column `code`
		|
		</MvCOMMENT>

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
				 				ADD
				 				(
				 					code	' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 254 ) $ '
				 				)'}">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvOPENVIEW NAME	= "Merchant"
					VIEW	= "TGLayouts_Components"
					QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components' }">
		<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.count"		VALUE = 0>
		<MvASSIGN NAME = "l.components"	VALUE = "">

		<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">
			<MvEVAL EXPR = "{ LayoutComponent_Read( l.components[ ++l.count ] ) }">
			<MvASSIGN NAME = "l.components" INDEX = "{ l.count }" MEMBER = "code" VALUE = "{ l.components[ l.count ]:id }">

			<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
		</MvWHILE>

		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

		<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components">
			<MvIF EXPR = "{ NOT LayoutComponent_Update( l.component ) }">
				<<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvFOREACH>

		<MvCOMMENT>
		|
		|	Add unique index
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components ADD UNIQUE INDEX TGLayouts_Components_3 ( layout_id, code )' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.version LT 2.000 }">
		<MvCOMMENT>
		|
		|	Alter sNN_TGComponents
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponents MODIFY COLUMN code ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponents MODIFY COLUMN descrip ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_MEMO() }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponents CHANGE COLUMN allow_children children ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_BOOL() }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Alter sNN_TGComponent_Attrs
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'RENAME TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs TO ' $ g.Store_Table_Prefix $ 'TGComponentAttributes' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponentAttributes MODIFY COLUMN code ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGComponentAttributes CHANGE COLUMN component_id cmpnt_id ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Alter sNN_TGComponent_Options
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'RENAME TABLE ' $ g.Store_Table_Prefix $ 'TGComponent_Options TO ' $ g.Store_Table_Prefix $ 'TGComponentOptions' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Alter sNN_TGLayouts
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts MODIFY COLUMN code ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Alter sNN_TGLayouts_Components
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'RENAME TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components TO ' $ g.Store_Table_Prefix $ 'TGLayoutComponents' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents CHANGE COLUMN component_id cmpnt_id ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents MODIFY COLUMN dt_start ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents MODIFY COLUMN dt_end ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents MODIFY COLUMN code ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_CHAR( 50 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Alter sNN_TGLayouts_Values
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'RENAME TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values TO ' $ g.Store_Table_Prefix $ 'TGLayoutValues' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutValues CHANGE COLUMN layouts_components_id lc_id ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Alter sNN_TGLayouts_Cache
		|
		</MvCOMMENT>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'RENAME TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache TO ' $ g.Store_Table_Prefix $ 'TGLayoutCache' }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvQUERY NAME = "Merchant"
				 QUERY = "{ 'ALTER TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts_Cache MODIFY COLUMN dt_cached ' $ [ g.Module_Library_Native_DBAPI ].DB_Type_NUMBER( 0, 0 ) }">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvCOMMENT>
		|
		|	Rename StoreKeys
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Load( 'TGComponents_Disp_Order',				l.TGComponents_Disp_Order )			OR
						NOT [ g.Module_Library_DB ].StoreKey_Load( 'TGComponent_Attrs',						l.TGComponent_Attrs )				OR
						NOT [ g.Module_Library_DB ].StoreKey_Load( 'TGComponent_Attrs_Disp_Order',			l.TGComponent_Attrs_Disp_Order )	OR
						NOT [ g.Module_Library_DB ].StoreKey_Load( 'TGComponent_Options',					l.TGComponent_Options )				OR
						NOT [ g.Module_Library_DB ].StoreKey_Load( 'TGComponent_Options_Disp_Order',		l.TGComponent_Options_Disp_Order )	OR
						NOT [ g.Module_Library_DB ].StoreKey_Load( 'TGLayouts_Components',					l.TGLayouts_Components ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentDisplayOrder',				l.TGComponents_Disp_Order:maxvalue )		OR
						NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentAttributes',				l.TGComponent_Attrs:maxvalue )				OR
						NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentAttributeDisplayOrder',	l.TGComponent_Attrs_Disp_Order:maxvalue )	OR
						NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentOptions',					l.TGComponent_Options:maxvalue )			OR
						NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGComponentOptionDisplayOrder',		l.TGComponent_Options_Disp_Order:maxvalue )	OR
						NOT [ g.Module_Library_DB ].StoreKey_Insert( 'TGLayoutComponents',					l.TGLayouts_Components:maxvalue ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{	NOT [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents_Disp_Order' )		OR
						NOT [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Attrs' )				OR
						NOT [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Attrs_Disp_Order' )	OR
						NOT [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Options' )			OR
						NOT [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponent_Options_Disp_Order' )	OR
						NOT [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayouts_Components' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponents' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponentAttributes' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGComponentOptions' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayouts' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutValues' }">
	<MvQUERY NAME = "Merchant" QUERY = "{ 'DROP TABLE ' $ g.Store_Table_Prefix $ 'TGLayoutCache' }">

	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponents' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponentDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponentAttributes' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponentAttributeDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponentOptions' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGComponentOptionDisplayOrder' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayouts' ) }">
	<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Delete( 'TGLayoutComponents' ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	util
|
</MvCOMMENT>

<MvFUNCTION NAME = "StoreUtilityModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen_Privileges" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = -1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation" PARAMETERS = "module var, indent" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].LeftNavigation_Dot( l.indent - 1, 'Screen=SUTL&Store_Code=' $ encodeattribute( g.Store:code ) $ '&Module_Code=' $ encodeattribute( l.module:code ), 'Main', 'Components and Layouts' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Admin_Open_Store }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ g.TGCOMPONENTS_Screen }">
		<MvEVAL EXPR = "{ ComponentsScreen_UI( g.TGCOMPONENTS_Screen ) }">
	<MvELSE>
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Components & Layouts', '', '' ) }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Element_AdminUI_CSS() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Components & Layouts', '', '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginContent() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawTabs( 'TGCOMPONENTS', 'TGCOMPONENTS_Sets:Layouts,TGCOMPONENTS_Components:Components' ) }">

		<MvHIDE FIELDS = "g.Module_Code">

		<MvEVAL EXPR = "{ ComponentTab_UI( g.Tab ) }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawButtons( '' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	component
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentModule_Initialize" PARAMETERS = "module var, item, all_settings var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_End" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Tabs" PARAMETERS = "module var, item, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Validate" PARAMETERS = "module var, item, field_prefix, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Update" PARAMETERS = "module var, item, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Content" PARAMETERS = "module var, item, tab, load_fields, field_prefix, fields var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Defaults" PARAMETERS = "module var, settings var" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Assign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Page_Unassign" PARAMETERS = "module var, page var, item, settings var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Prerender" PARAMETERS = "module var, item, all_settings var, settings var, param" STANDARDOUTPUTLEVEL = "">
</MVFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Head" PARAMETERS = "module var, item, all_settings var, settings" STANDARDOUTPUTLEVEL = "">
</MVFUNCTION>

<MvFUNCTION NAME = "ComponentModule_Render_Start" PARAMETERS = "module var, item, settings var, item_settings var, param" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Parse_Function_Parameters( l.param, l.function_name, l.parameters, l.parameter_count ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.function_name EQ 'layout_load_code' }">
		<MvIF EXPR = "{ l.parameter_count NE 2 }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT Is_Variable( l.parameters[ 2 ] ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.new_param" VALUE = "{ 'Item_Runtime_Load_Layout( l.module, l.param, ' $ l.parameters $ ')' }">
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSEMBLY>
		.string asm_0 "l.new_param"
		.string asm_1 "g.Module_Root"
		.string asm_2 "l.module"
		.string asm_3 "module"
		.string asm_4 "g.MvDO_Error"

			pushc		asm_1
			pushn
			pushc		asm_2
			pushn
			pushc		asm_3
			memb_ro
			cat
			pushc		asm_0
			pushn
			tagerror	22, 0
			do_function
			pop
			tagerror	22, 3
			pushc		asm_4
			pushn
			jmp_eq		L_asm_success
			retn
		L_asm_success:				
	</MvASSEMBLY>
</MvFUNCTION>

<MvCOMMENT>
|
|	json
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_JSON" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Module_Function EQ 'Components_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Components_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Components_DisplayOrder_Update' }">		<MvFUNCTIONRETURN VALUE = "{ JSON_Components_DisplayOrder_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layouts_Load_Query' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Layouts_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Insert' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Update' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Delete' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Component_Attrs_Load_Query' }">			<MvFUNCTIONRETURN VALUE = "{ JSON_Component_Attrs_Load_Query( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Insert' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Update' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_Delete' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentAttrs_DisplayOrder_Update' }">	<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentAttrs_DisplayOrder_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Insert' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Insert( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Update' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Update( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'ComponentOption_Delete' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_ComponentOption_Delete( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Load_Components' }">				<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Load_Components( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Components_Load_All' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Components_Load_All( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Save' }">							<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Save( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Layout_Duplicate' }">						<MvFUNCTIONRETURN VALUE = "{ JSON_Layout_Duplicate( l.module ) }">
	<MvELSEIF EXPR = "{ g.Module_Function EQ 'Delete_Layout_Cache' }">					<MvFUNCTIONRETURN VALUE = "{ JSON_Delete_Layout_Cache( l..module ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	clientside
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Clientside" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ( '.js' EIN g.Filename ) EQ len_var( g.Filename ) }">		<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/javascript' ) }">
	<MvELSEIF EXPR = "{ ( '.css' EIN g.Filename ) EQ len_var( g.Filename ) }">	<MvEVAL EXPR = "{ [ g.Module_Clientside ].Module_Content_Type( l.module, 'text/css' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Filename EQ 'components.js' }">				<MvINCLUDE FILE = "js/components.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'layouts.js' }">				<MvINCLUDE FILE = "js/layouts.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'component_attrs.js' }">		<MvINCLUDE FILE = "js/component_attrs.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'angular.min.js' }">			<MvINCLUDE FILE = "angular_app/angular.min.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'angular-ui-tree.min.js' }">	<MvINCLUDE FILE = "angular_app/angular-ui-tree.min.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'app.js' }">					<MvINCLUDE FILE = "angular_app/app.js" INTERPRET="OFF">
	<MvELSEIF EXPR = "{ g.Filename EQ 'styles.css' }">				<MvINCLUDE FILE = "angular_app/styles.css" INTERPRET="OFF">
	<MvELSE>														<MvASSIGN NAME = "l.null" VALUE = "{ miva_output_header( 'Status', '404 Not Found' ) }">
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
|
|	provision_store
|
</MvCOMMENT>

<MvFUNCTION NAME = "Module_Provision_Store" PARAMETERS = "module var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.child_xml" ARRAY = "l.provide_xml:children">
		<MvASSIGN NAME = "l.name"		VALUE = "{ tolower( l.child_xml:name ) }">

		<MvIF EXPR = "{ l.name EQ 'layout_add' }">						<MvEVAL EXPR = "{ Module_Provision_Layout_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'layout_update'}">				<MvEVAL EXPR = "{ Module_Provision_Layout_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_add'}">				<MvEVAL EXPR = "{ Module_Provision_Component_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_update'}">				<MvEVAL EXPR = "{ Module_Provision_Component_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'component_delete'}">				<MvEVAL EXPR = "{ Module_Provision_Component_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_add'}">		<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_update'}">	<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Update( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattribute_delete'}">	<MvEVAL EXPR = "{ Module_Provision_ComponentAttribute_Delete( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'componentattributeoption_add'}">	<MvEVAL EXPR = "{ Module_Provision_ComponentAttributeOption_Add( l.module, l.child_xml ) }">
		<MvELSEIF EXPR = "{ l.name EQ 'layoutcomponent_add'}">			<MvEVAL EXPR = "{ Module_Provision_LayoutComponent_Add( l.module, l.child_xml ) }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvCOMMENT>
|
|	export
|
</MvCOMMENT>

<MvFUNCTION NAME = "ExportModule_Export" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Exp_Count" VALUE = 1>

	<MvIF EXPR = "{ NOT g.Export_Continue }">
		<MvIF EXPR = "{ fexists( '/' $ g.Export_File ) }">
			<MvASSIGN NAME = "l.success" VALUE = "{ fdelete( '/' $ g.Export_File ) }">
		</MvIF>

		<MvASSIGN NAME = "l.wrapper" VALUE = "<Module code=\"TGCOMPONENTS\" feature=\"util\">">
		<MvASSIGN NAME = "l.success" VALUE = "{ file_create( '/' $ g.Export_File, 'data', l.wrapper ) }">
	</MvIF>

	<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Start( 'Components Export Progress', 'EXPT' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Show() }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ Export_Provisioning_Components( l.output ) }">
	<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Start( 'Layouts Export Progress', 'EXPT' ) }">
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Show() }">
		<MvASSIGN NAME = "l.count"	VALUE = "{ Export_Provisioning_Layouts( l.output ) }">
	</MvIF>

	<MvASSIGN NAME = "l.success" VALUE = "{ file_append( '/' $ g.Export_File, 'data', l.output ) }">

	<MvIF EXPR = "{ NOT g.Export_Continue }">
		<MvASSIGN NAME = "l.wrapper" VALUE = "</Module>">
		<MvASSIGN NAME = "l.success" VALUE = "{ file_append( '/' $ g.Export_File, 'data', l.wrapper ) }">

		<MvIF EXPR = "{ g.Export_SendEmail }">
			<MvDO FILE = "{ g.Module_Library_Utilities }" NAME = "l.null" VALUE = "{ Send_Email_Attachment( g.Export_Email, g.Export_Email, '', 'Components & Layouts Export', g.Export_File, '/', 'data' ) }">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( '#Error#', 'Review Export Email Sent' ) }">
		</MvIF>

		<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_ProgressComplete( 'Exported Components.' ) }">
		<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_ProgressComplete( 'Exported Layouts.' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( '#Error#', 'Reviews Exported to ' $ g.Export_File ) }">
	</MvIF>

	<MvHIDE FIELDS = "	g.Exp_Offset,
						g.Export_Continue,
						g.Module_Code,
						g.Exp_Count,
						g.Offset,
						g.Export_File,
						g.Export_SendEmail,
						g.Export_Email,
						g.Total_Count,
						g.Current_Export">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ExportModule_Validate" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.Export_File"	VALUE = "{ trim( g.Export_File ) }">
	<MvASSIGN NAME = "g.Current_Export" VALUE = "{ trim( g.Current_Export ) }">

	<MvIF EXPR = "{ len( g.Export_File ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_File', 'Please specify a file' ) }">
	<MvELSE>
		<MvIF EXPR = "{ '/' IN g.Export_File }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_File', 'Please do not include a path in the file name' ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "g.Export_Email" 	VALUE = "{ trim( g.Export_Email ) }">

	<MvIF EXPR = "{ g.Export_SendEmail }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( g.Export_Email ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Export_Email', 'Please specify a valid email address' ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Current_Export }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Current_Export', 'Please select an export.' ) }">
	<MvELSEIF EXPR = "{ g.Current_Export NE 'COMPONENTS' AND g.Current_Export NE 'LAYOUTS' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Admin ].FieldError( '', 'Current_Export', 'Please select an export.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ExportModule_Screen" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Export_File }">
		<MvASSIGN NAME = "g.Export_File" VALUE = "component_layouts.xml">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Current_Export }">
		<MvASSIGN NAME = "g.Current_Export" VALUE = "COMPONENTS">
	</MvIF>

	<MvIF EXPR = "{ g.Export_Continue EQ 1 }">
		<script type="text/javascript">
			function exp_continue()
			{
				document.forms[ Screen ].submit();
			}
			window.onload = exp_continue;
		</script>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_End() }">

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_Start( 'Export Components & Layouts to XML', 'EXPT', '' ) }">
		<MvIF EXPR = "{ g.Current_Export EQ 'COMPONENTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_JavaScript( 'Exporting Components...', 'EXPT', 'EXPT' ) }">
		<MvELSEIF EXPR = "{ g.Current_Export EQ 'LAYOUTS' }">
			<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_JavaScript( 'Exporting Layouts...', 'EXPT', 'EXPT' ) }">
		</MvIF>

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_CSS() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].BeginScreen_End( 'Export Components &amp; Layouts to XML', 'EXPT', '' ) }">
		<MvDO FILE = "{ g.Module_Admin }" NAME = "l.ok" VALUE = "{ BeginContent() }">

		<div style="font-family: sans-serif;">
			<MvHIDE FIELDS = "g.Module_Code">
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Draw_FieldSet_Open( 'Export Settings', 150 ) }">
				<table cellspacing="5">
					<tr>
						<td valign="top"><strong>Export Components & Layouts to File:</strong></td>
						<td width="100%">
							<input type="text" name="Export_File" size="40" value="{ encodeentities( g.Export_File ) }"><br>
							<em>This is located in the private directory. This will be deleted if it already exists.</em>
						</td>
					</tr>
					<tr>
						<td valign="top"><strong>Export:</strong></td>
						<td width="100%">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Current_Export', 'COMPONENTS', g.Current_Export, 'Components' ) }"><br>
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'Current_Export', 'LAYOUTS', g.Current_Export, '' ) }"> 
							<select name="LAYOUT_OPTION">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 0, g.LAYOUT_OPTION, 'All Layouts' ) }">
								<MvFOREACH ITERATOR = "l.layout" ARRAY = "l.layouts" COUNT = "{ Layout_Load_All( l.layouts ) }">
									<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( l.layout:id, g.LAYOUT_OPTION, l.layout:name ) }">
								</MvFOREACH>
							</select><br>
						</td>
					</tr>
					<tr>
						<td valign="top">Email File To:</td>
						<td width="100%">
							<MvIF EXPR = "{ NOT g.Export_SendEmail }">
								<label><input type="radio" name="Export_SendEmail" value="0" checked>Do Not Email<br></label>
								<input type="radio" name="Export_SendEmail" value="1">
							<MvELSE>
								<label><input type="radio" name="Export_SendEmail" value="0">Do Not Email<br></label>
								<input type="radio" name="Export_SendEmail" value="1" checked>
							</MvIF>
							<MvIF EXPR = "{ ISNULL g.Export_Email }">
								<MvASSIGN NAME = "g.Export_Email" VALUE = "{ g.Store:email }">
							</MvIF>
							<input type="text" size="40" name="Export_Email" value="{ encodeentities( g.Export_Email ) }">
						</td>
					</tr>
				</table>
			<MvEVAL EXPR = "{ [ g.Module_Admin ].Draw_FieldSet_Close() }">
		</div>
		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Element_ExportProgressBar_HTML() }">

		<MvEVAL EXPR = "{ [ g.Module_Admin ].EndContent() }">

		<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].Draw_ExportProgressBar_Buttons( 'Export', 'EXPT' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].EndScreen() }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	scheduledtask
|
</MvCOMMENT>

<MvFUNCTION NAME = "ScheduledTaskModule_Capabilities" PARAMETERS = "module var, capabilities var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.capabilities:provision_settings" VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Operations" PARAMETERS = "module var, operations var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "code"		VALUE = "check_layout_cache">
	<MvASSIGN NAME = "l.operations" INDEX = 1 MEMBER = "descrip"	VALUE = "Layout Cache & Scheduled Component Check">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Fields" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Prompt" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Field" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Invalid" PARAMETERS = "module var, field_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Validate" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Update" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Delete" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Execute" PARAMETERS = "module var, task var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.task:operation NE 'check_layout_cache' }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', 'Unsupported operation' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Check_Layout_Cache() }">
		<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Feature_SCH_DB ].ScheduledTaskLog_Insert( l.task:id, 'W', g.Error_Code $ ': ' $ g.Error_Message ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ScheduledTaskModule_Provision_Settings" PARAMETERS = "module var, task var, provide_xml var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGComponents
|
</MvCOMMENT>

<MvFUNCTION NAME = "Component_Read" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:id"				VALUE = "{ TGComponents.d.id }">
	<MvASSIGN NAME = "l.component:code"				VALUE = "{ TGComponents.d.code }">
	<MvASSIGN NAME = "l.component:name"				VALUE = "{ TGComponents.d.name }">
	<MvASSIGN NAME = "l.component:descrip"			VALUE = "{ TGComponents.d.descrip }">
	<MvASSIGN NAME = "l.component:image"			VALUE = "{ TGComponents.d.image }">
	<MvASSIGN NAME = "l.component:children"			VALUE = "{ TGComponents.d.children }">
	<MvASSIGN NAME = "l.component:disp_order"		VALUE = "{ TGComponents.d.disp_order }">

	<MvCOMMENT>
	|
	|	For backwards compatibility
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.component:allow_children"	VALUE = "{ TGComponents.d.children }">
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Insert" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents' ) }">
	<MvASSIGN NAME = "l.component:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentDisplayOrder' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponents
						  ( id, code, name, descrip, image, children, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.component:id, l.component:code, l.component:name, l.component:descrip, l.component:image, l.component:children, l.component:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Load_ID" PARAMETERS = "id, component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Component_Read( l.component ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Load_Code" PARAMETERS = "code, component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Component_Read( l.component ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Update" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponents
						  SET
							code = ?,
							name = ?,
							descrip = ?,
							image = ?,
							children = ?,
							disp_order = ?
						  WHERE
							id = ?' }"
			 FIELDS	= "l.component:code, l.component:name, l.component:descrip, l.component:image, l.component:children, l.component:disp_order, l.component:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Component_Delete_LowLevel( l.id ) OR
					NOT ComponentAttrs_Delete_Component( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Update_Offsets" PARAMETERS = "components var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"						VALUE = 0>

	<MvASSIGN NAME = "l.state_pos"							VALUE = 1>
	<MvASSIGN NAME = "l.state_count"						VALUE = "{ miva_array_elements( l.components ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.components, l.state_count ) }">

	<MvWHILE EXPR = "{ l.state_pos LE l.state_count }">
		<MvASSIGN NAME = "g.Components_Order_ID"		VALUE = "{ l.components[ l.state_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current state at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponents',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id <> ? ORDER BY disp_order',
																				   'g.Components_Order_ID',
																				   l.components[ l.state_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponents.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.components[ l.state_pos ] }">

			<MvASSIGN NAME = "l.state_pos"	VALUE = "{ l.state_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

			<MvIF EXPR = "{ NOT Components_Update_Offsets_PastEnd( l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponents.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

			<MvCOMMENT>
			|
			| Make a hole by shifting components after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'UPDATE ' 
									$ g.Store_Table_Prefix $ 'TGComponents 
								  SET 
									disp_order = disp_order + 1 
								  WHERE 
									disp_order>= ?' }" 
					 FIELDS	= "l.disp_order">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentDisplayOrder' ) }">

			<MvCOMMENT>
			|
			| Put the state in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME	= "Merchant"
					 QUERY	= "{ 'UPDATE ' 
									$ g.Store_Table_Prefix $ 'TGComponents 
								  SET 
									disp_order = ? 
								  WHERE 
									id = ?' }" 
					 FIELDS	= "l.disp_order, g.Components_Order_ID">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.state_pos"	VALUE = "{ l.state_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT Components_Update_Offsets_PastEnd( l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Update_Offsets_PastEnd" PARAMETERS = "pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.Components_Order_ID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentDisplayOrder' ) }">

		<MvQUERY NAME	= "Merchant"
				 QUERY	= "{ 'UPDATE ' 
								$ g.Store_Table_Prefix $ 'TGComponents 
							  SET 
								disp_order = ? 
							  WHERE 
								id = ?' }" 
				 FIELDS	= "l.disp_order, g.Components_Order_ID">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Layout_Reference" PARAMETERS = "component_id, layouts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutComponents"
				QUERY	= "{ 'SELECT
								DISTINCT( lc.layout_id ) AS layout_id,
								l.code AS layout_code
							  FROM ' $ g.Store_Table_Prefix $ 'TGLayoutComponents lc
							  LEFT JOIN ' $ g.Store_Table_Prefix $ 'TGLayouts l
							  ON lc.layout_id = l.id
							  WHERE
							  	component_id = ?' }"
				FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.layouts_count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayoutComponents.d.EOF }">
		<MvASSIGN NAME = "l.temp:id"		VALUE = "{ TGLayoutComponents.d.layout_id }">
		<MvASSIGN NAME = "l.temp:code"		VALUE = "{ TGLayoutComponents.d.layout_code }">
		<MvASSIGN NAME = "l.layouts_count"	VALUE = "{ miva_array_insert_var( l.layouts, l.temp, -1 ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayoutComponents" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( '#Error#', l.layouts_count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Read" PARAMETERS = "component_attribute var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attribute:id"				VALUE = "{ TGComponentAttributes.d.id }">
	<MvASSIGN NAME = "l.component_attribute:cmpnt_id"		VALUE = "{ TGComponentAttributes.d.cmpnt_id }">
	<MvASSIGN NAME = "l.component_attribute:code"			VALUE = "{ TGComponentAttributes.d.code }">
	<MvASSIGN NAME = "l.component_attribute:prompt"			VALUE = "{ TGComponentAttributes.d.prompt }">
	<MvASSIGN NAME = "l.component_attribute:type"			VALUE = "{ TGComponentAttributes.d.type }">
	<MvASSIGN NAME = "l.component_attribute:required"		VALUE = "{ TGComponentAttributes.d.required }">
	<MvASSIGN NAME = "l.component_attribute:disp_order"		VALUE = "{ TGComponentAttributes.d.disp_order }">

	<MvCOMMENT>
	|
	|	For backwards compatibility
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.component_attribute:component_id"	VALUE = "{ TGComponentAttributes.d.cmpnt_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Insert" PARAMETERS = "component_attribute var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attribute:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentAttributes' ) }">
	<MvASSIGN NAME = "l.component_attribute:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentAttributeDisplayOrder' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponentAttributes
						  ( id, cmpnt_id, code, prompt, type, required, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.component_attribute:id, l.component_attribute:cmpnt_id, l.component_attribute:code, l.component_attribute:prompt, l.component_attribute:type, l.component_attribute:required, l.component_attribute:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Load_ID" PARAMETERS = "id, component_attribute var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponentAttributes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponentAttributes WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponentAttributes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentAttribute_Read( l.component_attribute ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME ="ComponentAttribute_Load_Code" PARAMETERS = "cmpnt_id, code, component_attribute var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponentAttributes"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponentAttributes WHERE cmpnt_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.cmpnt_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponentAttributes.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentAttribute_Read( l.component_attribute ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Update" PARAMETERS = "component_attribute var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponentAttributes
						  SET
							code = ?,
							prompt = ?,
							type = ?,
							required = ?
						  WHERE
							id = ?' }"
			 FIELDS	= "l.component_attribute:code, l.component_attribute:prompt, l.component_attribute:type, l.component_attribute:required, l.component_attribute:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Delete" PARAMETERS = "component_attribute_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ComponentAttribute_Delete_LowLevel( l.component_attribute_id ) OR
					NOT ComponentOptions_Delete_Attribute( l.component_attribute_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Delete_LowLevel" PARAMETERS = "component_attribute_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponentAttributes WHERE id = ?' }"
			 FIELDS	= "l.component_attribute_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Delete_Component" PARAMETERS = "cmpnt_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponentAttributes"
				QUERY	= "{ 'SELECT id FROM ' $ g.Store_Table_Prefix $ 'TGComponentAttributes WHERE cmpnt_id = ?' }"
				FIELDS	= "l.cmpnt_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGComponentAttributes.d.EOF }">
		<MvIF EXPR = "{ NOT ComponentAttrs_Delete( ComponentAttribute_Delete.d.id  ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGComponentAttributes" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Update_Offsets" PARAMETERS = "cmpnt_id, fields var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"			VALUE = 0>

	<MvASSIGN NAME = "l.field_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.field_count"			VALUE = "{ miva_array_elements( l.fields ) }">
	<MvASSIGN NAME = "g.Field_cmpnt_id"		VALUE = "{ l.cmpnt_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.fields, l.field_count ) }">

	<MvWHILE EXPR = "{ l.field_pos LE l.field_count }">
		<MvASSIGN NAME = "g.ComponentAttribute_ID" 	VALUE = "{ l.fields[ l.field_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current field at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponentAttributes',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponentAttributes WHERE id <> ? AND cmpnt_id = ? ORDER BY disp_order',
																				   'g.ComponentAttribute_ID, g.Field_cmpnt_id',
																				   l.fields[ l.field_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.Error_Message ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponentAttributes.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.fields[ l.field_pos ] }">

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">

			<MvIF EXPR = "{ NOT ComponentAttribute_Update_Offsets_PastEnd( l.cmpnt_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponentAttributes.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentAttributes">

			<MvCOMMENT>
			|
			| Make a hole by shifting fields after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponentAttributes 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order>= ? AND cmpnt_id = ?' }" 
													FIELDS = "l.disp_order, l.cmpnt_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentAttributeDisplayOrder' ) }">

			<MvCOMMENT>
			|
			| Put the field in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponentAttributes 
													SET 
														disp_order = ? 
													WHERE 
														id = ? AND cmpnt_id = ?' }" 
													FIELDS = "l.disp_order, g.ComponentAttribute_ID, l.cmpnt_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT ComponentAttribute_Update_Offsets_PastEnd( l.cmpnt_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttribute_Update_Offsets_PastEnd" PARAMETERS = "cmpnt_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos" VALUE = 1>

	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.ComponentAttribute_ID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponentAttributeDisplayOrder' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'TGComponentAttributes 
												SET 
													disp_order = ? 
												WHERE 
													id = ? AND cmpnt_id = ?' }" 
												FIELDS = "l.disp_order, g.ComponentAttribute_ID, l.cmpnt_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
		</MvIF>

		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGComponentOptions
|
</MvCOMMENT>

<MvFUNCTION NAME = "ComponentOption_Read" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option:id"			VALUE = "{ TGComponentOptions.d.id }">
	<MvASSIGN NAME = "l.component_option:attr_id"		VALUE = "{ TGComponentOptions.d.attr_id }">
	<MvASSIGN NAME = "l.component_option:prompt"		VALUE = "{ TGComponentOptions.d.prompt }">
	<MvASSIGN NAME = "l.component_option:disp_order"	VALUE = "{ TGComponentOptions.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Insert" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option:id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Options' ) }">
	<MvASSIGN NAME = "l.component_option:disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Options_Disp_Order' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponentOptions
						  ( id, attr_id, prompt, disp_order )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.component_option:id, l.component_option:attr_id, l.component_option:prompt, l.component_option:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Load" PARAMETERS = "id, component_option var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponentOptions"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponentOptions WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponentOptions.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentOptions">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentOption_Read( l.component_option ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponentOptions">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Update" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponentOptions SET prompt = ? WHERE id = ?' }"
			 FIELDS	= "l.component_option:prompt, l.component_option:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponentOptions WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Delete_Attribute" PARAMETERS = "attr_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponentOptions WHERE attr_id = ?' }"
			 FIELDS	= "l.attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGLayouts
|
</MvCOMMENT>

<MvFUNCTION NAME = "Layout_Read" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout:id"		VALUE = "{ TGLayouts.d.id }">
	<MvASSIGN NAME = "l.layout:code"	VALUE = "{ TGLayouts.d.code }">
	<MvASSIGN NAME = "l.layout:name"	VALUE = "{ TGLayouts.d.name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Insert" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGLayouts' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts
						  ( id, code, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout:id, l.layout:code, l.layout:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_ID" PARAMETERS = "id, layout var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Layout_Read( l.layout ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_Code" PARAMETERS = "code, layout var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Layout_Read( l.layout ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Update" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Update_LowLevel( l.layout ) OR
					NOT LayoutCache_Recache( l.layout:id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_All" PARAMETERS = "layouts var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts' }">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayouts.d.EOF }">
		<MvEVAL EXPR = "{ Layout_Read( l.layouts[ ++l.count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( '#Error#', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Update_LowLevel" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts
						  SET
							code = ?,
							name = ?
						  WHERE
							id = ?' }"
			 FIELDS	= "l.layout:code, l.layout:name, l.layout:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Delete" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Delete_LowLevel( l.layout_id )			OR
					NOT LayoutComponents_Delete_Layout( l.layout_id )	OR
					NOT LayoutCache_Delete( l.layout_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Delete" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE id = ?' }"
			 FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGLayoutComponents
|
</MvCOMMENT>

<MvFUNCTION NAME = "LayoutComponent_Read" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:id"			VALUE = "{ TGLayoutComponents.d.id }">
	<MvASSIGN NAME = "l.layout_component:layout_id"		VALUE = "{ TGLayoutComponents.d.layout_id }">
	<MvASSIGN NAME = "l.layout_component:cmpnt_id"		VALUE = "{ TGLayoutComponents.d.cmpnt_id }">
	<MvASSIGN NAME = "l.layout_component:name"			VALUE = "{ TGLayoutComponents.d.name }">
	<MvASSIGN NAME = "l.layout_component:parent"		VALUE = "{ TGLayoutComponents.d.parent }">
	<MvASSIGN NAME = "l.layout_component:active"		VALUE = "{ TGLayoutComponents.d.active }">
	<MvASSIGN NAME = "l.layout_component:disp_order"	VALUE = "{ TGLayoutComponents.d.disp_order }">
	<MvASSIGN NAME = "l.layout_component:dt_start"		VALUE = "{ TGLayoutComponents.d.dt_start }">
	<MvASSIGN NAME = "l.layout_component:dt_end"		VALUE = "{ TGLayoutComponents.d.dt_end }">
	<MvASSIGN NAME = "l.layout_component:code"			VALUE = "{ TGLayoutComponents.d.code }">

	<MvCOMMENT>
	|
	|	For backwards compatibility
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.layout_component:component_id"	VALUE = "{ TGLayoutComponents.d.cmpnt_id }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Insert" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGLayoutComponents' ) }">

	<MvIF EXPR = "{ ISNULL l.layout_component:parent }">		<MvASSIGN NAME = "l.layout_component:parent"		VALUE = 0> </MvIF>
	<MvIF EXPR = "{ ISNULL l.layout_component:dt_start }">		<MvASSIGN NAME = "l.layout_component:dt_start"		VALUE = 0> </MvIF>
	<MvIF EXPR = "{ ISNULL l.layout_component:dt_end }">		<MvASSIGN NAME = "l.layout_component:dt_end"		VALUE = 0> </MvIF>
	<MvIF EXPR = "{ ISNULL l.layout_component:disp_order }">	<MvASSIGN NAME = "l.layout_component:disp_order"	VALUE = 0> </MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayoutComponents
						  ( id, layout_id, cmpnt_id, name, parent, active, disp_order, dt_start, dt_end, code )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.layout_component:id, l.layout_component:layout_id, l.layout_component:cmpnt_id,
			 		   l.layout_component:name, l.layout_component:parent, l.layout_component:active,
			 		   l.layout_component:disp_order, l.layout_component:dt_start, l.layout_component:dt_end,
			 		   l.layout_component:code">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_ID" PARAMETERS = "id, layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayoutComponents WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayoutComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutComponent_Read( l.layout_component ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_Code" PARAMETERS = "layout_id, code, layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayoutComponents WHERE layout_id = ? AND ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( 'code' ) $ ' = ' $ [ g.Module_Library_Native_DBAPI ].DB_Compare_UPPER( '?' ) }"
				FIELDS	= "l.layout_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayoutComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutComponent_Read( l.layout_component ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Update_Lowlevel" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.layout_component:parent }">		<MvASSIGN NAME = "l.layout_component:parent"		VALUE = 0> </MvIF>
	<MvIF EXPR = "{ ISNULL l.layout_component:dt_start }">		<MvASSIGN NAME = "l.layout_component:dt_start"		VALUE = 0> </MvIF>
	<MvIF EXPR = "{ ISNULL l.layout_component:dt_end }">		<MvASSIGN NAME = "l.layout_component:dt_end"		VALUE = 0> </MvIF>
	<MvIF EXPR = "{ ISNULL l.layout_component:disp_order }">	<MvASSIGN NAME = "l.layout_component:disp_order"	VALUE = 0> </MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayoutComponents
					      SET
							name = ?,
							parent = ?,
							active = ?,
							disp_order = ?,
							dt_start = ?,
							dt_end = ?,
							code = ?
					      WHERE
						    id = ?' }"
			 FIELDS	= "l.layout_component:name, l.layout_component:parent, l.layout_component:active,
			 		   l.layout_component:disp_order, l.layout_component:dt_start, l.layout_component:dt_end,
			 		   l.layout_component:code, l.layout_component:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Delete" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutComponent_Delete_LowLevel( l.id ) OR
					NOT LayoutValues_Delete_LayoutComponent( l.id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Delete_LowLevel" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayoutComponents WHERE id = ?' }"
			 FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponents_Delete_Layout" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayoutComponents WHERE layout_id = ?' }"
				FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayoutComponents.d.EOF }">
		<MvIF EXPR = "{ NOT LayoutComponent_Delete( TGLayoutComponents.d.id  ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGLayoutComponents" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MVFUNCTION>

<MvCOMMENT>
|
|	sNN_TGLayoutValues
|
</MvCOMMENT>

<MvFUNCTION NAME = "LayoutValue_Read" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_value:lc_id"					VALUE = "{ TGLayoutValues.d.lc_id  }">
	<MvASSIGN NAME = "l.layout_value:attr_id"				VALUE = "{ TGLayoutValues.d.attr_id }">
	<MvASSIGN NAME = "l.layout_value:value"					VALUE = "{ TGLayoutValues.d.value }">

	<MvCOMMENT>
	|
	|	For backwards compatibility
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.layout_value:layouts_components_id"	VALUE = "{ TGLayoutValues.d.lc_id  }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Insert" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValue_Insert_LowLevel( l.layout_value ) OR
					NOT LayoutValue_Reference_Insert( l.layout_value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Insert_LowLevel" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayoutValues
						  ( lc_id, attr_id, value )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout_value:lc_id, l.layout_value:attr_id, l.layout_value:value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load" PARAMETERS = "lc_id, attr_id, layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutValues"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayoutValues WHERE lc_id = ? AND attr_id = ?' }"
				FIELDS	= "l.lc_id, l.attr_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayoutValues.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutValues">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutValue_Read( l.layout_value ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutValues">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load_All" PARAMETERS = "lc_id, layout_values var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutValues"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayoutValues WHERE lc_id = ?' }"
				FIELDS	= "l.lc_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ NOT TGLayoutValues.d.EOF }">
		<MvEVAL EXPR = "{ LayoutValue_Read( l.layout_values[ ++l.count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGLayoutValues" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutValues">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Update" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValue_Update_Lowlevel( l.layout_value ) OR
					NOT LayoutValue_Reference_Update( l.layout_value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Update_Lowlevel" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayoutValues
					      SET
							value = ?
					      WHERE
						    lc_id = ? AND
						    attr_id = ?' }"
			 FIELDS	= "l.layout_value:value, l.layout_value:lc_id, l.layout_value:attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Delete" PARAMETERS = "layout_value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValue_Delete_LowLevel( l.layout_value ) OR
					NOT LayoutValue_Reference_Delete( l.layout_value ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Delete" PARAMETERS = "layout_value" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayoutValues WHERE lc_id = ? AND attr_id = ?' }"
			 FIELDS	= "l.layout_value:lc_id, l.layout_value:attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	sNN_TGLayoutCache
|
</MvCOMMENT>

<MvFUNCTION NAME = "LayoutCache_Read" PARAMETERS = "layout_cache var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_value:layout_id"	VALUE = "{ TGLayoutCache.d.layout_id  }">
	<MvASSIGN NAME = "l.layout_value:value"		VALUE = "{ miva_array_deserialize( TGLayoutCache.d.value ) }">
	<MvASSIGN NAME = "l.layout_value:dt_cached"	VALUE = "{ TGLayoutCache.d.dt_cached }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutCache_Insert" PARAMETERS = "layout_cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_cache:value" VALUE = "{ miva_array_serialize( l.layout_cache:value ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayoutCache
						  ( layout_id, value, dt_cached )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout_cache:layout_id, l.layout_cache:value, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutCache_Load" PARAMETERS = "layout_id, layout_cache var" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutCache"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayoutCache WHERE layout_id = ?' }"
				FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayoutCache.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( '#Error#' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutCache_Read( l.layout_cache ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutCache_Delete" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayoutCache WHERE layout_id = ?' }"
			 FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutCache_Delete_All" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayoutCache' }">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutCache_Check_All" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutCache"
				QUERY	= "{
								'SELECT
									layoutcache.layout_id
								FROM
									' $ g.Store_Table_Prefix $ 'TGLayoutCache layoutcache
								JOIN
									' $ g.Store_Table_Prefix $ 'TGLayouts_Components layoutcomponents
								ON
									layoutcache.layout_id = layoutcomponents.layout_id
								WHERE
									( 
										layoutcomponents.dt_start> 0 AND
										layoutcomponents.dt_start < ? AND
										layoutcomponents.dt_start> layoutcache.dt_cached
									)
									OR
									(
										layoutcomponents.dt_end> 0 AND
										layoutcomponents.dt_end < ? AND
										layoutcomponents.dt_end> layoutcache.dt_cached
									)' }"
				FIELDS	= "s.dyn_time_t, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayoutCache.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGLayoutCache.d.EOF }">
		<MvIF EXPR = "{ NOT LayoutCache_Delete( TGLayoutCache.d.layout_id ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGLayoutCache" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutCache_Check_Layout" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayoutCache"
				QUERY	= "{
								'SELECT
									layoutcache.layout_id
								FROM
									' $ g.Store_Table_Prefix $ 'TGLayoutCache layoutcache
								JOIN
									' $ g.Store_Table_Prefix $ 'TGLayouts_Components layoutcomponents
								ON
									layoutcache.layout_id = layoutcomponents.layout_id
								WHERE
									layoutcomponents.layout_id = ? AND
									( 
										layoutcomponents.dt_start> 0 AND
										layoutcomponents.dt_start < ? AND
										layoutcomponents.dt_start> layoutcache.dt_cached
									)
									OR
									(
										layoutcomponents.dt_end> 0 AND
										layoutcomponents.dt_end < ? AND
										layoutcomponents.dt_end> layoutcache.dt_cached
									)' }"
				FIELDS	= "l.layout_id, s.dyn_time_t, s.dyn_time_t">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayoutCache.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGLayoutCache.d.EOF }">
		<MvIF EXPR = "{ NOT LayoutCache_Delete( TGLayoutCache.d.layout_id ) }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGLayoutCache" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayoutCache">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvCOMMENT>
|
|	json functions
|
</MvCOMMENT>

<MvFUNCTION NAME = "JSON_Components_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGComponents', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name,descrip:s.descrip,image:s.image,children:s.children,disp_order:s.disp_order' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name,descrip:s.descrip,image:s.image,children:s.children,disp_order:s.disp_order', 's.disp_order' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGComponents', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGComponents.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count ) }">
					"id": <MvEVAL EXPR = "{ int( TGComponents.d.id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.code ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.name ) }">",
					"descrip" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.descrip ) }">",
					"image" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGComponents.d.image ) }">",
					"children" : <MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Boolean( TGComponents.d.children ) }">,
					"disp_order": <MvEVAL EXPR = "{ int( TGComponents.d.disp_order ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGComponents" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Code',		l.component:code )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'r', 'Name',		l.component:name )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Descrip',		l.component:descrip )	OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Image',		l.component:image )		OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'children',	l.component:children ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ Component_Load_Code( l.component:code, l.existing_component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A component with the code \'' $ l.existing_component:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Insert( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Id',			l.component:id,	-1, -1 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Code',		l.component:code )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'r', 'Name',		l.component:name )			OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Descrip',		l.component:descrip )		OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'o', 'Image',		l.component:image )			OR
					NOT [ g.Module_JSON ].JSON_Input_Boolean(	'O', 'children',	l.component:children ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_ID( l.component:id, l.previous_component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Id', 'Component not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( toupper( l.previous_component:code ) NE toupper( l.component:code ) ) AND
					( Component_Load_Code( l.component:code, l.existing_component ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A component with the code \'' $ l.existing_component:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number( 'o', 'Id', l.id, -1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Delete( l.id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Components_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvFOREACH ITERATOR = "l.component" ARRAY = "g.Components_Order" INDEX = "l.pos">
		<MvASSIGN NAME = "l.component:id"				VALUE = "{ int( l.component:id ) }">
		<MvASSIGN NAME = "l.component:offset"			VALUE = "{ int( l.component:offset ) }">
		<MvASSIGN NAME = "l.component:original_offset"	VALUE = "{ int( l.component:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.component:offset ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Components_Order[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvASSIGN NAME = "l.change_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.component" ARRAY = "g.Components_Order">
		<MvASSIGN NAME = "l.changes" INDEX = "{ ++l.change_count }"	VALUE = "{ l.component }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.change_count EQ 0 }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Components_Update_Offsets( l.changes ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layouts_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace" ERROROUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 1, 0, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ int( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ int( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGLayouts', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGLayouts', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( '#Error#', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGLayouts.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGLayouts.d.id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGLayouts.d.code ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGLayouts.d.name ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGLayouts" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 1, 0, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Code( 'R', 'Code', l.layout:code ) OR
					NOT [ g.Module_JSON ].JSON_Input_Text( 'r', 'Name', l.layout:name ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ Layout_Load_Code( l.layout:code, l.existing_layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A layout with the code \'' $ l.existing_layout:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Insert( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 1, 0 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number(	'o', 'Id',			l.layout:id,	-1, -1 )	OR
					NOT [ g.Module_JSON ].JSON_Input_Code(		'R', 'Code',		l.layout:code )				OR
					NOT [ g.Module_JSON ].JSON_Input_Text(		'r', 'Name',		l.layout:name ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_ID( l.layout:id, l.previous_layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Id', 'Layout not found' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( toupper( l.previous_layout:code ) NE toupper( l.layout:code ) ) AND
					( Layout_Load_Code( l.layout:code, l.existing_layout ) ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'A layout with the code \'' $ l.existing_layout:code $ '\' already exists' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Update( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ g.Session_Type NE 'admin' }">									<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }">						<MvFUNCTIONRETURN>	</MvIF>
	<MvIF EXPR = "{ NOT [ g.Module_Admin ].CanI( 'TGCOMPONENTS', 0, 0, 0, 1 ) }">	<MvFUNCTIONRETURN>	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Input_Number( 'o', 'Id', l.id, -1, -1 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_InputErrors() }">
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Delete( l.id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>