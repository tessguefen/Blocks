<MvCOMMENT>
	Component_Read( component var )
	Component_Insert_Lowlevel( component var )
	Component_Insert( component var )
	Component_Load_ID( id, output var )
	Component_Load_Code( code, output var )
	Component_Update_Lowlevel( component var )
	Component_Update( component var )
	Component_Delete( component_id )

	JSON_Component_Insert( module var )
	JSON_Component_Update( module var )
	JSON_Component_Delete( module var )

	Layout_Read( layout var )
	Layout_Insert_Lowlevel( layout var )
	Layout_Insert( layout var )
	Layout_Load_ID( id, output var )
	Layout_Load_Code( code, output var )
	Layout_Update_Lowlevel( layout var )
	Layout_Update( layout var )
	Layout_Delete( layout_id )

	JSON_Layout_Insert( module var )
	JSON_Layout_Update( module var )
	JSON_Layout_Delete( module var )

	ComponentAttrs_Read( component_attr var )
	ComponentAttrs_Insert_Lowlevel( component_attr var )
	ComponentAttrs_Insert( component_attr var )
	Validate_ComponentAttr_Type( type )
	ComponentAttrs_Load_Code( component_id, code, output var )
	ComponentAttrs_Load_ID( id, output var )
	ComponentAttrs_Update_Lowlevel( component_attr var )
	ComponentAttrs_Update( component_attr var )
	ComponentAttrs_Delete( component_attr_id )

	JSON_ComponentAttrs_Insert( module var )
	JSON_ComponentAttrs_Update( module var )
	JSON_ComponentAttrs_Delete( module var )
	JSON_ComponentAttrs_DisplayOrder_Update( module var )

	ComponentAttrs_Update_Offsets( component_id, fields var )
	ComponentAttrs_Update_Offsets_PastEnd( component_id, pastend var, pastend_count )
	ComponentOptions_Update_Offsets( attr_id, options var )
	ComponentOptions_Update_Offsets_PastEnd( attr_id, pastend var, pastend_count )

	ComponentOption_Read( component_option var )
	ComponentOption_Insert_Lowlevel( component_option var )
	ComponentOption_Insert( component_option var )
	ComponentOption_Load_ID( id, output var )
	ComponentOption_Update_Lowlevel( component_option var )
	ComponentOption_Update( component_option var )
	ComponentOption_Delete( component_option_id )
	ComponentOptions_Delete_Attr( component_attr_id )

	JSON_ComponentOption_Insert( module var )
	JSON_ComponentOption_Update( module var )
	JSON_ComponentOption_Delete( module var )

	LayoutComponent_Read( layout_component var )
	LayoutComponent_Insert_Lowlevel( layout_component var )
	LayoutComponent_Insert( layout_component var )
	LayoutComponent_Load_ID( id, output var )
	LayoutComponent_Update_Lowlevel( layout_component var )
	LayoutComponent_Update( layout_component var )
	LayoutComponent_Delete( layout_component_id )
	LayoutComponent_Delete_Values( layout_component_id )

	LayoutValue_Read( layout_value var )
	LayoutValue_Insert_Lowlevel( layout_value var )
	LayoutValue_Insert( layout_value var )
	LayoutValue_Load( layouts_components_id, attr_id, output var )
	LayoutValue_Load_Value( layouts_components_id, attr_id, output var )
	LayoutValue_Update_Lowlevel( layout_value var )
	LayoutValue_Update( layout_value var )
	LayoutValue_Delete( layouts_components_id, attr_id )

	Layout_Components_Save( layout_id, layout_nodes var, deleted_components var )
	Layout_Components_Save_Lowlevel( layout_id, layout_nodes var )
	Layout_Components_Delete_Lowlevel( layout_id, deleted_nodes var )
	Layout_Components_Save_Attributes( node var )

	Layout_Components_Load_Parent_Lowlevel( layout_id, parent_id, components var, count var )
	Recursive_Nes_Attack( layout_id, parent_id, components var )
	Read_Layout_Component( component var )
	Components_Attrs_Load_All_ID( component_id, return var )
	Components_Options_Load_Attr( attr_id, return var )
	LayoutComponent_Load_Values( layout_component_id, attributes var )

	JSON_Layout_Load_Components( module var )

</MvCOMMENT>

<MvFUNCTION NAME = "Component_Read" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "id"				VALUE = "{ TGComponents.d.id }">
	<MvASSIGN NAME = "l.component" MEMBER = "code"				VALUE = "{ TGComponents.d.code }">
	<MvASSIGN NAME = "l.component" MEMBER = "name"				VALUE = "{ TGComponents.d.name }">
	<MvASSIGN NAME = "l.component" MEMBER = "descrip"			VALUE = "{ TGComponents.d.descrip }">
	<MvASSIGN NAME = "l.component" MEMBER = "image"				VALUE = "{ TGComponents.d.image }">
	<MvASSIGN NAME = "l.component" MEMBER = "allow_children"	VALUE = "{ TGComponents.d.allow_children }">
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Insert_Lowlevel" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponents
						  ( id, code, name, descrip, image, allow_children )
						  VALUES
						  ( ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.component:id, l.component:code, l.component:name, l.component:descrip, l.component:image, l.component:allow_children">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Insert" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "code" VALUE = "{ trim( l.component:code ) }">
	<MvASSIGN NAME = "l.component" MEMBER = "name" VALUE = "{ trim( l.component:name ) }">

	<MvIF EXPR = "{ ISNULL l.component:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Component_Load_Code( l.component:code, l.void ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Insert_Lowlevel( l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Component_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Load_Code" PARAMETERS = "code, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponents"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE code = ?' }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponents.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Component_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponents">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Update_LowLevel" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponents
						  SET
							code = ?,
							name = ?,
							descrip = ?,
							image = ?,
							allow_children = ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.component:code, l.component:name, l.component:descrip, l.component:image, l.component:allow_children, l.component:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "Component_Update" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Component_Load_ID( l.component:id, l.prev_component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component can not be found.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.component:code NE l.prev_component:code }">
		<MvIF EXPR = "{ Component_Load_Code( l.component:code, l.void ) }">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Component_Update_LowLevel( l.component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Component_Delete" PARAMETERS = "component_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponents WHERE id = ?' }"
			 FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "code"				VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.component" MEMBER = "name"				VALUE = "{ g.Name }">
	<MvASSIGN NAME = "l.component" MEMBER = "descrip"			VALUE = "{ g.Descrip }">
	<MvASSIGN NAME = "l.component" MEMBER = "image"				VALUE = "{ g.Image }">
	<MvASSIGN NAME = "l.component" MEMBER = "allow_children"	VALUE = "{ g.Allow_Children }">

	<MvIF EXPR = "{ NOT Component_Insert( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "id"				VALUE = "{ g.Id }">
	<MvASSIGN NAME = "l.component" MEMBER = "code"				VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.component" MEMBER = "name"				VALUE = "{ g.Name }">
	<MvASSIGN NAME = "l.component" MEMBER = "descrip"			VALUE = "{ g.Descrip }">
	<MvASSIGN NAME = "l.component" MEMBER = "image"				VALUE = "{ g.Image }">
	<MvASSIGN NAME = "l.component" MEMBER = "allow_children"	VALUE = "{ g.Allow_Children }">

	<MvIF EXPR = "{ NOT Component_Update( l.component ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Component_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Component_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Read" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "id"				VALUE = "{ TGLayouts.d.id }">
	<MvASSIGN NAME = "l.component" MEMBER = "code"				VALUE = "{ TGLayouts.d.code }">
	<MvASSIGN NAME = "l.component" MEMBER = "name"				VALUE = "{ TGLayouts.d.name }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Insert_Lowlevel" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout" MEMBER = "id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGLayouts' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts
						  ( id, code, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout:id, l.layout:code, l.layout:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Insert" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout" MEMBER = "code" VALUE = "{ trim( l.layout:code ) }">
	<MvASSIGN NAME = "l.layout" MEMBER = "name" VALUE = "{ trim( l.layout:name ) }">

	<MvIF EXPR = "{ ISNULL l.layout:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.layout:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ Layout_Load_Code( l.layout:code, l.void ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.layout:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Insert_Lowlevel( l.layout ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENTS-LAYOUTS-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGCOMPONENTS-LAYOUTS-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Layout_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Load_Code" PARAMETERS = "code, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE code = ?' }"
				FIELDS	= "l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Layout_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Update_LowLevel" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts
						  SET
							code = ?,
							name = ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.layout:code, l.layout:name, l.layout:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "Layout_Update" PARAMETERS = "layout var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Load_ID( l.layout:id, l.prev_layout ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component can not be found.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.layout:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.layout:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.layout:code NE l.prev_layout:code }">
		<MvIF EXPR = "{ Layout_Load_Code( l.layout:code, l.void ) }">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist.">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.layout:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ Layout_Update_LowLevel( l.layout ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Delete" PARAMETERS = "layout_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts WHERE id = ?' }"
			 FIELDS	= "l.layout_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTS-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout" MEMBER = "code"				VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.layout" MEMBER = "name"				VALUE = "{ g.Name }">

	<MvIF EXPR = "{ NOT Layout_Insert( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout" MEMBER = "id"				VALUE = "{ g.Id }">
	<MvASSIGN NAME = "l.layout" MEMBER = "code"			VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.layout" MEMBER = "name"			VALUE = "{ g.Name }">

	<MvIF EXPR = "{ NOT Layout_Update( l.layout ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Read" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "id"			VALUE = "{ TGComponent_Attrs.d.id }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "component_id"	VALUE = "{ TGComponent_Attrs.d.component_id }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "code"		VALUE = "{ TGComponent_Attrs.d.code }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "prompt"		VALUE = "{ TGComponent_Attrs.d.prompt }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "type"		VALUE = "{ TGComponent_Attrs.d.type }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "required"	VALUE = "{ TGComponent_Attrs.d.required }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "disp_order"	VALUE = "{ TGComponent_Attrs.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Insert_Lowlevel" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs' ) }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs_Disp_Order' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs
						  ( id, component_id, code, prompt, type, required, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.component_attrs:id, l.component_attrs:component_id, l.component_attrs:code, l.component_attrs:prompt, l.component_attrs:type, l.component_attrs:required, l.component_attrs:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Insert" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "code" VALUE = "{ trim( l.component_attrs:code ) }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "prompt" VALUE = "{ trim( l.component_attrs:prompt ) }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "type" VALUE = "{ trim( l.component_attrs:type ) }">

	<MvIF EXPR = "{ ISNULL l.component_attrs:component_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_ID( l.component_attrs:component_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component_attrs:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ComponentAttrs_Load_Code( l.component_attrs:component_id, l.component_attrs:code, l.void ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist for this component.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:type }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Type must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Validate_ComponentAttr_Type( l.component_attrs:type ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Invalid value for Type.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Insert_Lowlevel( l.component_attrs ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_ComponentAttr_Type" PARAMETERS = "type" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{
		l.type NE 'radio' AND
		l.type NE 'select' AND
		l.type NE 'checkbox' AND
		l.type NE 'text' AND
		l.type NE 'memo' AND
		l.type NE 'image' AND
		l.type NE 'product' AND
		l.type NE 'category' AND
		l.type NE 'link'
	}">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME ="ComponentAttrs_Load_Code" PARAMETERS = "component_id, code, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE component_id = ? AND code = ?' }"
				FIELDS	= "l.component_id, l.code">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTATTRS-0003' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentAttrs_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTATTRS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentAttrs_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update_Lowlevel" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs
						  SET
							code = ?,
							prompt = ?,
							type = ?,
							required = ?
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.component_attrs:code, l.component_attrs:prompt, l.component_attrs:type, l.component_attrs:required, l.component_attrs:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "ComponentAttrs_Update" PARAMETERS = "component_attrs var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.component_attrs:component_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.component_attrs:id, l.prev_component_attrs ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This component can not be found.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvASSIGN NAME = "l.component_attrs" MEMBER = "code" VALUE = "{ trim( l.component_attrs:code ) }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "prompt" VALUE = "{ trim( l.component_attrs:prompt ) }">
	<MvASSIGN NAME = "l.component_attrs" MEMBER = "type" VALUE = "{ trim( l.component_attrs:type ) }">


	<MvIF EXPR = "{ NOT Component_Load_ID( l.component_attrs:component_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:code }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Code must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.component_attrs:code ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Please enter a Valid Code.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ l.component_attrs:code NE l.prev_component_attrs:code }">
		<MvIF EXPR = "{ ComponentAttrs_Load_Code( l.component_attrs:component_id, l.component_attrs:code, l.void ) }">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "This code already exist for this component.">
			<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_attrs:type }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Type must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Validate_ComponentAttr_Type( l.component_attrs:type ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Invalid value for Type.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "type">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ComponentAttrs_Update_Lowlevel( l.component_attrs ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Delete" PARAMETERS = "component_attr_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE id = ?' }"
			 FIELDS	= "l.component_attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentOptions_Delete_Attr( l.component_attr_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_ComponentAttrs_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "component_id"			VALUE = "{ g.Component_Id }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "code"				VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "prompt"			VALUE = "{ g.Prompt }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "type"				VALUE = "{ g.type }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "required"			VALUE = "{ g.Required }">

	<MvIF EXPR = "{ NOT ComponentAttrs_Insert( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "id"				VALUE = "{ g.Id }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "component_id"		VALUE = "{ g.Component_Id }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "code"				VALUE = "{ g.Code }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "prompt"			VALUE = "{ g.Prompt }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "type"				VALUE = "{ g.type }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "required"			VALUE = "{ g.Required }">

	<MvIF EXPR = "{ NOT ComponentAttrs_Update( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ComponentAttrs_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentAttrs_DisplayOrder_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_JSON ].JSON_Store_Open() }"><MvFUNCTIONRETURN></MvIF>
	<MvASSIGN NAME = "l.component_id" VALUE = "{ g.component_id }">

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Attrs_DisplayOrder" INDEX = "l.pos">
		<MvASSIGN NAME = "l.attrs_order:id"					VALUE = "{ int( l.attrs_order:id ) }">
		<MvASSIGN NAME = "l.attrs_order:offset"				VALUE = "{ int( l.attrs_order:offset ) }">
		<MvASSIGN NAME = "l.attrs_order:original_offset"	VALUE = "{ int( l.attrs_order:original_offset ) }">

		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.attrs_order:offset ) }">
			<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Attrs_DisplayOrder[' $ l.pos $ ']', g.Validation_Message ) }">
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Option_Order" INDEX = "l.attr_pos">
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attrs_order" INDEX = "l.option_pos">
			<MvASSIGN NAME = "l.option_order:id"				VALUE = "{ int( l.option_order:id ) }">
			<MvASSIGN NAME = "l.option_order:offset"			VALUE = "{ int( l.option_order:offset ) }">
			<MvASSIGN NAME = "l.option_order:original_offset"	VALUE = "{ int( l.option_order:original_offset ) }">

			<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Positive_Required( l.option_order:offset ) }">
				<MvFUNCTIONRETURN VALUE VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'Option_Order[' $ l.attr_pos $ '][ ' $ l.option_pos $ ' ]', g.Validation_Message ) }">
			</MvIF>
		</MvFOREACH>
	</MvFOREACH>

	<MvASSIGN NAME = "l.field_count" VALUE = 0>

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Attrs_DisplayOrder">
		<MvIF EXPR = "{ l.attrs_order:offset EQ l.attrs_order:original_offset }">
			<MvFOREACHCONTINUE>
		</MvIF>

		<MvASSIGN NAME = "l.attr_changes" INDEX = "{ ++l.field_count }" VALUE = "{ l.attrs_order }">
	</MvFOREACH>

	<MvIF EXPR = "{ l.field_count }">
		<MvIF EXPR = "{ NOT ComponentAttrs_Update_Offsets( l.component_id, l.attr_changes ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
		</MvIF>
	</MvIF>

	<MvFOREACH ITERATOR = "l.attrs_order" ARRAY = "g.Option_Order" INDEX = "l.attr_id">
		<MvASSIGN NAME = "l.option_count" VALUE = 0>
		
		<MvFOREACH ITERATOR = "l.option_order" ARRAY = "l.attrs_order" INDEX = "l.option_pos">
			<MvIF EXPR = "{ l.option_order:offset EQ l.option_order:original_offset }">
				<MvFOREACHCONTINUE>
			</MvIF>

			<MvASSIGN NAME = "l.option_changes" INDEX = "{ ++l.option_count }" VALUE = "{ l.option_order }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.option_count }">
			<MvIF EXPR = "{ NOT ComponentOptions_Update_Offsets( l.attr_id, l.option_changes ) }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( g.Error_Code, g.Error_Message ) }">
			</MvIF>
		</MvIF>
	</MvFOREACH>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update_Offsets" PARAMETERS = "component_id, fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"				VALUE = 0>

	<MvASSIGN NAME = "l.field_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.field_count"			VALUE = "{ miva_array_elements( l.fields ) }">
	<MvASSIGN NAME = "g.Field_component_id" VALUE = "{ l.component_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.fields, l.field_count ) }">

	<MvWHILE EXPR = "{ l.field_pos LE l.field_count }">
		<MvASSIGN NAME = "g.ComponentAttrs_ID" 	VALUE = "{ l.fields[ l.field_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current field at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponent_Attrs',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE id <> ? AND component_id = ? ORDER BY disp_order',
																				   'g.ComponentAttrs_ID, g.Field_component_id',
																				   l.fields[ l.field_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0009', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.fields[ l.field_pos ] }">

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

			<MvIF EXPR = "{ NOT ComponentAttrs_Update_Offsets_PastEnd( l.component_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponent_Attrs.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

			<MvCOMMENT>
			|
			| Make a hole by shifting fields after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Attrs 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order >= ? AND component_id = ?' }" 
													FIELDS = "l.disp_order, l.component_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0010', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.void" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs_Disp_Order' ) }">

			<MvCOMMENT>
			|
			| Put the field in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Attrs 
													SET 
														disp_order = ? 
													WHERE 
														id = ? AND component_id = ?' }" 
													FIELDS = "l.disp_order, g.ComponentAttrs_ID, l.component_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0011', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.field_pos"	VALUE = "{ l.field_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT ComponentAttrs_Update_Offsets_PastEnd( l.component_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentAttrs_Update_Offsets_PastEnd" PARAMETERS = "component_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.ComponentAttrs_ID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Attrs_Disp_Order' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'TGComponent_Attrs 
												SET 
													disp_order = ? 
												WHERE 
													id = ? AND component_id = ?' }" 
												FIELDS = "l.disp_order, g.ComponentAttrs_ID, l.component_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-DISPORDER-0012', g.MvQUERY_Error ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Update_Offsets" PARAMETERS = "attr_id, options var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.pastend_count"				VALUE = 0>

	<MvASSIGN NAME = "l.option_pos"				VALUE = 1>
	<MvASSIGN NAME = "l.option_count"			VALUE = "{ miva_array_elements( l.options ) }">
	<MvASSIGN NAME = "g.Option_attr_id" 		VALUE = "{ l.attr_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray( l.options, l.option_count ) }">

	<MvWHILE EXPR = "{ l.option_pos LE l.option_count }">
		<MvASSIGN NAME = "g.Option_Order_AttrID" 	VALUE = "{ l.options[ l.option_pos ]:id }">

		<MvCOMMENT>
		|
		| Determine disp_order of current option at this offset.
		|
		</MvCOMMENT>

		<MvIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range( 'Merchant',
																				   'TGComponent_Options',
																				   'SELECT id, disp_order FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE id <> ? AND attr_id = ? ORDER BY disp_order',
																				   'g.Option_Order_AttrID, g.Option_attr_id',
																				   l.options[ l.option_pos ]:offset - 1,
																				   1 ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0009', g.MvOPENVIEW_Error ) }">
		</MvIF>

		<MvIF EXPR = "{ TGComponent_Options.d.EOF }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

			<MvCOMMENT>
			|
			| Offset was higher than the last record.  This case requires specialized processing, so save this record for later.
			|
			</MvCOMMENT>

			<MvASSIGN NAME = "l.pastend_count"							VALUE = "{ l.pastend_count + 1 }">
			<MvASSIGN NAME = "l.pastend" INDEX = "{ l.pastend_count }"	VALUE = "{ l.options[ l.option_pos ] }">

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		<MvELSEIF EXPR = "{ l.pastend_count }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

			<MvIF EXPR = "{ NOT ComponentOptions_Update_Offsets_PastEnd( l.data_id, l.pastend, l.pastend_count ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "l.pastend_count" VALUE = 0>
		<MvELSE>
			<MvASSIGN NAME = "l.disp_order" VALUE = "{ TGComponent_Options.d.disp_order }">
			<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

			<MvCOMMENT>
			|
			| Make a hole by shifting options after this disp_order down
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Options 
													SET 
														disp_order = disp_order + 1 
													WHERE 
														disp_order >= ? AND attr_id = ?' }" 
													FIELDS = "l.disp_order, l.attr_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0010', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Options_Disp_Order' ) }">

			<MvCOMMENT>
			|
			| Put the option in the newly created hole
			|
			</MvCOMMENT>

			<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
														$ g.Store_Table_Prefix $ 'TGComponent_Options 
													SET 
														disp_order = ? 
													WHERE 
														id = ? AND attr_id = ?' }" 
													FIELDS = "l.disp_order, g.Option_Order_AttrID, l.attr_id">
			<MvIF EXPR = "{ g.MvQUERY_Error }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0011', g.MvQUERY_Error ) }">
			</MvIF>

			<MvASSIGN NAME = "l.option_pos"	VALUE = "{ l.option_pos + 1 }">
		</MvIF>
	</MvWHILE>

	<MvCOMMENT>
	|
	| If all the downward records were past the end, they must be processed here.
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ l.pastend_count }">
		<MvIF EXPR = "{ NOT ComponentOptions_Update_Offsets_PastEnd( l.data_id, l.pastend, l.pastend_count ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>		

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Update_Offsets_PastEnd" PARAMETERS = "attr_id, pastend var, pastend_count" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	| Process records moving past the end.  These records must be sorted in ascending order.
	|
	</MvCOMMENT>

	<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].SortOffsetArray_PastEnd( l.pastend, l.pastend_count ) }">

	<MvASSIGN NAME = "l.pastend_pos"		VALUE = 1>
	<MvWHILE EXPR = "{ l.pastend_pos LE l.pastend_count }">
		<MvASSIGN NAME = "g.Option_Order_AttrID" 	VALUE = "{ l.pastend[ l.pastend_pos ]:id }">
		<MvASSIGN NAME = "l.disp_order"				VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponents_Options_Disp_Order' ) }">

		<MvQUERY NAME = "Merchant" QUERY = "{ 'UPDATE ' 
													$ g.Store_Table_Prefix $ 'TGComponent_Options 
												SET 
													disp_order = ? 
												WHERE 
													id = ? AND attr_id = ?' }" 
												FIELDS = "l.disp_order, g.Option_Order_AttrID, l.attr_id">
		<MvIF EXPR = "{ g.MvQUERY_Error }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCD-OPTION-0012', g.MvQUERY_Error ) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.pastend_pos"	VALUE = "{ l.pastend_pos + 1 }">
	</MvWHILE>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Read" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option" MEMBER = "id"			VALUE = "{ TGComponent_Options.d.id }">
	<MvASSIGN NAME = "l.component_option" MEMBER = "attr_id"	VALUE = "{ TGComponent_Options.d.attr_id }">
	<MvASSIGN NAME = "l.component_option" MEMBER = "prompt"		VALUE = "{ TGComponent_Options.d.prompt }">
	<MvASSIGN NAME = "l.component_option" MEMBER = "disp_order"	VALUE = "{ TGComponent_Options.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Insert_Lowlevel" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option" MEMBER = "id"			VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Options' ) }">
	<MvASSIGN NAME = "l.component_option" MEMBER = "disp_order"	VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGComponent_Options_Disp_Order' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGComponent_Options
						  ( id, attr_id, prompt, disp_order )
						  VALUES
						  ( ?, ?, ?, ? )' }"
			 FIELDS	= "l.component_option:id, l.component_option:attr_id, l.component_option:prompt, l.component_option:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Insert" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option" MEMBER = "prompt" VALUE = "{ trim( l.component_option:prompt ) }">

	<MvIF EXPR = "{ ISNULL l.component_option:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.component_option:attr_id, l.component_attr ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_option:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>


	<MvIF EXPR = "{ NOT ComponentOption_Insert_Lowlevel( l.component_option ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Options"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Options.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTOPTION-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ ComponentOption_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Update_Lowlevel" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGComponent_Options
						  SET
							prompt = ?,
						  WHERE
							id		= ?' }"
			 FIELDS	= "l.component_option:prompt, l.component_option:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Update" PARAMETERS = "component_option var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_option" MEMBER = "prompt" VALUE = "{ trim( l.component_option:prompt ) }">

	<MvIF EXPR = "{ ISNULL l.component_option:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.component_option:attr_id, l.component_attr ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.component_option:prompt }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Prompt must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "prompt">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ ComponentAttrs_Update_Lowlevel( l.component_option ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOption_Delete" PARAMETERS = "component_option_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE id = ?' }"
			 FIELDS	= "l.component_option_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "ComponentOptions_Delete_Attr" PARAMETERS = "component_attr_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE attr_id = ?' }"
			 FIELDS	= "l.component_attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTOPTION-0008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentOption_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "attr_id"			VALUE = "{ g.Attr_ID }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "prompt"			VALUE = "{ g.Prompt }">

	<MvIF EXPR = "{ NOT ComponentOption_Insert( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentOption_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "id"				VALUE = "{ g.Id }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "attr_id"			VALUE = "{ g.Attr_ID }">
	<MvASSIGN NAME = "l.component_attr" MEMBER = "prompt"			VALUE = "{ g.Prompt }">

	<MvIF EXPR = "{ NOT ComponentOption_Update( l.component_attr ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_ComponentOption_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT ComponentOption_Delete( g.Id ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.TGCOMPONENTS_Error:name, g.TGCOMPONENTS_Error:message ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Read" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "id"				VALUE = "{ TGLayouts_Components.d.id }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "layout_id"		VALUE = "{ TGLayouts_Components.d.layout_id }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "component_id"	VALUE = "{ TGLayouts_Components.d.component_id }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "name"			VALUE = "{ TGLayouts_Components.d.name }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "parent"			VALUE = "{ TGLayouts_Components.d.parent }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "active"			VALUE = "{ TGLayouts_Components.d.active }">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "disp_order"		VALUE = "{ TGLayouts_Components.d.disp_order }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Insert_Lowlevel" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGLayouts_Components' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
						  ( id, layout_id, component_id, name, parent, active, disp_order )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.layout_component:id, l.layout_component:layout_id, l.layout_component:component_id, l.layout_component:name, l.layout_component:parent, l.layout_component:active, l.layout_component:disp_order">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Insert" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "name " VALUE = "{ trim( l.layout_component:name ) }">

	<MvIF EXPR = "{ ISNULL l.layout_component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_component:layout_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layout_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_component:component_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Layout_Load_ID( l.layout_component:layout_id, l.layout )}">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layout_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT Component_Load_ID( l.layout_component:component_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "component_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Insert_Lowlevel( l.layout_component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE id = ?' }"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Components.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTCOMPONENTS-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutComponent_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Update_Lowlevel" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts_Components
					      SET
							name = ?,
							parent = ?,
							active = ?,
							disp_order = ?
					      WHERE
						    id		= ?' }"
			 FIELDS	= "l.layout_component:name, l.layout_component:parent, l.layout_component:active, l.layout_component:disp_order, l.layout_component:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTCOMPONENTS-0006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Update" PARAMETERS = "layout_component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_component" MEMBER = "name" VALUE = "{ trim( l.layout_component:name ) }">

	<MvIF EXPR = "{ ISNULL l.layout_component:name }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Name must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "name">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ LayoutComponent_Update_Lowlevel( l.layout_component ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Delete" PARAMETERS = "layout_component_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE id = ?' }"
			 FIELDS	= "l.layout_component_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Delete_Values( l.layout_component_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Delete_Values" PARAMETERS = "layout_component_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ?' }"
			 FIELDS	= "l.layout_component_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Read" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.layout_value" MEMBER = "layouts_components_id"	VALUE = "{ TGLayouts_Values.d.layouts_components_id  }">
	<MvASSIGN NAME = "l.layout_value" MEMBER = "attr_id"				VALUE = "{ TGLayouts_Values.d.attr_id }">
	<MvASSIGN NAME = "l.layout_value" MEMBER = "value"					VALUE = "{ TGLayouts_Values.d.value }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Insert_Lowlevel" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGLayouts_Values
						  ( layouts_components_id, attr_id, value )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.layout_value:layouts_components_id, l.layout_value:attr_id, l.layout_value:value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTVALUES-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Insert" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.layout_value:layouts_components_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layouts_components_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_value:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout )}">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layout_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.layout_value:attr_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ LayoutValue_Load( l.layout_value:layouts_components_id, l.layout_value:attr_id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ LayoutValue_Update( l.layout_value ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValue_Insert_Lowlevel( l.layout_value ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "code">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load" PARAMETERS = "layouts_components_id, attr_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Values"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ? AND attr_id = ?' }"
				FIELDS	= "l.layouts_components_id, l.attr_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTVALUES-0004', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGLayouts_Values.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Values">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-LAYOUTVALUES-0005' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ LayoutValue_Read( l.output ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Values">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Load_Value" PARAMETERS = "layouts_components_id, attr_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT LayoutValue_Load( l.layouts_components_id, l.attr_id, l.loaded_value ) }">
		<MvASSIGN NAME = "l.output"	VALUE = "">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>
	<MvASSIGN NAME = "l.output"	VALUE = "{ l.loaded_value:value }">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "LayoutValue_Update_Lowlevel" PARAMETERS = "layout_value" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGLayouts_Values
					      SET
							value = ?
					      WHERE
						    layouts_components_id = ? AND
						    attr_id = ?' }"
			 FIELDS	= "l.layout_value:value, l.layout_value:layouts_components_id, l.layout_value:attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-LAYOUTVALUES-0006', g.MvQUERY_Error ) }">
	</MvIF>
	
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Update" PARAMETERS = "layout_value var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.layout_value:layouts_components_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout Component ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layouts_components_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT l.layout_value:attr_id }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID must be present.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutComponent_Load_ID( l.layout_value:layouts_components_id, l.layout )}">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Layout Component ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "layouts_components_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT ComponentAttrs_Load_ID( l.layout_value:attr_id, l.component ) }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "Attribute ID does not exist.">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "attr_id">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT LayoutValue_Load( l.layout_value:layouts_components_id, l.layout_value:attr_id, l.value ) }">
		<MvFUNCTIONRETURN VALUE = "{ LayoutValue_Insert_Lowlevel( l.layout_value ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ LayoutValue_Update_Lowlevel( l.layout_value ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutValue_Delete" PARAMETERS = "layout_value" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Values WHERE layouts_components_id = ? AND attr_id = ?' }"
			 FIELDS	= "l.layout_value:layouts_components_id, l.layout_value:attr_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:message"	VALUE = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.TGCOMPONENTS_Error:name"	VALUE = "id">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTATTRS-0007', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Save" PARAMETERS = "layout_id, layout_nodes var, deleted_components var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Layout_Components_Save_Lowlevel( l.layout_id, l.layout_nodes ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvIF EXPR = "{ NOT Layout_Components_Delete_Lowlevel( l.layout_id, l.deleted_components ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Save_Lowlevel" PARAMETERS = "layout_id, layout_nodes var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
		Recursive Function that will update the layout components.
	</MvCOMMENT>
	<MvFOREACH ITERATOR = "l.node" ARRAY = "l.layout_nodes:nodes">

		<MvASSIGN NAME = "l.disp_order" VALUE = "{ l.disp_order + 1 }" />
		<MvASSIGN NAME = "l.node" MEMBER = "layout_id"		VALUE = "{ l.layout_id }">
		<MvASSIGN NAME = "l.node" MEMBER = "parent"			VALUE = "{ l.layout_nodes:id }">
		<MvASSIGN NAME = "l.node" MEMBER = "component_id"	VALUE = "{ l.node:component:id }">
		<MvASSIGN NAME = "l.node" MEMBER = "disp_order"		VALUE = "{ l.disp_order }">

		<MvIF EXPR = "{ ( l.node:id EQ 0 ) OR ( ISNULL l.node:id )  }">
			<MvIF EXPR = "{ NOT LayoutComponent_Insert( l.node ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT LayoutComponent_Update( l.node ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Components_Save_Attributes( l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvIF EXPR = "{ NOT Layout_Components_Save_Lowlevel( l.layout_id, l.node ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Delete_Lowlevel" PARAMETERS = "layout_id, deleted_nodes var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.node" ARRAY = "l.deleted_nodes:nodes">

		<MvIF EXPR = "{ ( l.node:id EQ 0 ) OR ( ISNULL l.node:id ) }">
			<MvFOREACHCONTINUE />
		</MvIF>

		<MvIF EXPR = "{ NOT LayoutComponent_Delete( l.node:id ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Save_Attributes" PARAMETERS = "node var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.node:component:attributes">
		<MvASSIGN NAME = "l.new_attribute" VALUE = "">

		<MvASSIGN NAME = "l.new_attribute" MEMBER = "layouts_components_id"	VALUE = "{ l.node:id }" />
		<MvASSIGN NAME = "l.new_attribute" MEMBER = "attr_id"				VALUE = "{ l.attribute:id }" />
		<MvASSIGN NAME = "l.new_attribute" MEMBER = "value"					VALUE = "{ l.attribute:value }" />

		<MvIF EXPR = "{ l.attribute:type EQ 'link' }">
			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ miva_array_serialize( l.attribute:link ) }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'product' }">
			<MvASSIGN NAME = "l.attribute:product:id" VALUE = "0" />
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Product_Load_Code( l.attribute:product:code, l.loaded_product ) }">
				<MvASSIGN NAME = "l.attribute:product:id" VALUE = "{ l.loaded_product:id }" />
			</MvIF>
			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ miva_array_serialize( l.attribute:product ) }">
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' }">
			<MvASSIGN NAME = "l.attribute:category:id" VALUE = "0" />
			<MvIF EXPR = "{ [ g.Module_Library_DB ].Category_Load_Code( l.attribute:category:code, l.loaded_category ) }">
				<MvASSIGN NAME = "l.attribute:category:id" VALUE = "{ l.loaded_category:id }" />
			</MvIF>
			<MvASSIGN NAME = "l.new_attribute:value" VALUE = "{ miva_array_serialize( l.attribute:category ) }">
		</MvIF>

		<MvIF EXPR = "{ NOT LayoutValue_Update( l.new_attribute ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Recursive_Nes_Attack" PARAMETERS = "layout_id, parent_id, components var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.component" ARRAY = "l.components" COUNT = "{ Layout_Components_Load_Parent_Lowlevel( l.layout_id, l.parent_id, l.components, l.count ) }">
		<MvIF EXPR = "{ l.component:component:allow_children EQ 1 }">
			<MvASSIGN NAME = "l.component:node_count" VALUE = "{ Recursive_Nes_Attack( l.component:layout_id, l.component:id, l.component:nodes ) }">
		</MvIF>
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Layout_Components_Load_Parent_Lowlevel" PARAMETERS = "layout_id, parent_id, components var, count var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGLayouts_Components"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGLayouts_Components WHERE layout_id = ? AND parent = ? ORDER BY disp_order' }"
				FIELDS	= "l.layout_id, l.parent_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGCOMPONENT-LAYOUT-1000', g.MvOPENVIEW_Error ) }">
	</MvIF>
	
	<MvASSIGN NAME = "l.count" VALUE = "0" />

	<MvWHILE EXPR = "{ NOT TGLayouts_Components.d.EOF }">

		<MvEVAL EXPR = "{ Read_Layout_Component( l.components[ ++l.count ] ) }">

		<MvSKIP NAME = "Merchant" VIEW = "TGLayouts_Components" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGLayouts_Components">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].ListLoad_EOF_Return( 'TGCOMPONENT-LAYOUT-2000', l.count ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Read_Layout_Component" PARAMETERS = "component var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.component" MEMBER = "id"				VALUE = "{ TGLayouts_Components.d.id }">
	<MvASSIGN NAME = "l.component" MEMBER = "component_id"		VALUE = "{ TGLayouts_Components.d.component_id }">
	<MvASSIGN NAME = "l.component" MEMBER = "layout_id"			VALUE = "{ TGLayouts_Components.d.layout_id }">
	<MvASSIGN NAME = "l.component" MEMBER = "name"				VALUE = "{ TGLayouts_Components.d.name }">
	<MvASSIGN NAME = "l.component" MEMBER = "parent"			VALUE = "{ TGLayouts_Components.d.parent }">
	<MvASSIGN NAME = "l.component" MEMBER = "active"			VALUE = "{ TGLayouts_Components.d.active }">
	<MvASSIGN NAME = "l.component" MEMBER = "disp_order"		VALUE = "{ TGLayouts_Components.d.disp_order  }">

	<MvASSIGN NAME = "l.void" VALUE = "{ Component_Load_ID( l.component:component_id, l.component:component ) }">
	<MvASSIGN NAME = "l.void" VALUE = "{ Components_Attrs_Load_All_ID( l.component:component_id, l.component:component:attributes ) }">
	<MvASSIGN NAME = "l.void" VALUE = "{ LayoutComponent_Load_Values( l.component:id, l.component:component:attributes ) }">
</MvFUNCTION>


<MvFUNCTION NAME = "Components_Attrs_Load_All_ID" PARAMETERS = "component_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Attrs"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Attrs WHERE component_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.component_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Attrs.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "0" />

	<MvWHILE EXPR = "{ NOT TGComponent_Attrs.d.EOF }">
		<MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }" />

		<MvASSIGN NAME ="l.void" VALUE = "{ ComponentAttrs_Read( l.return[ l.count ] ) }">

		<MvIF EXPR = "{ l.return[ l.count ]:type EQ 'select' OR l.return[ l.count ]:type EQ 'radio' }">
			<MvASSIGN NAME ="l.void" VALUE = "{ Components_Options_Load_Attr( l.return[ l.count ]:id, l.return[ l.count ]:options ) }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGComponent_Attrs" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Attrs">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Components_Options_Load_Attr" PARAMETERS = "attr_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW	= "TGComponent_Options"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGComponent_Options WHERE attr_id = ? ORDER BY disp_order' }"
				FIELDS	= "l.attr_id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGComponents-COMPONENTS-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGComponent_Options.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGComponents-COMPONENTS-0003' ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGComponent_Options.d.EOF }">
		<MvASSIGN NAME ="l.void" VALUE = "{ ComponentOption_Read( l.return[ ++l.count ] ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGComponent_Options" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGComponent_Options">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "LayoutComponent_Load_Values" PARAMETERS = "layout_component_id, attributes var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.attribute" ARRAY = "l.attributes">

		<MvASSIGN NAME = "l.void" VALUE = "{ LayoutValue_Load_Value( l.layout_component_id, l.attribute:id, l.attribute:value ) }">

		<MvIF EXPR = "{ l.attribute:type EQ 'link' }">
			<MvASSIGN NAME = "l.attribute:link" VALUE = "{ miva_array_deserialize( l.attribute:value ) }">
			<MvIF EXPR = "{ ISNULL l.attribute:link:type }">		<MvASSIGN NAME = "l.attribute:link:type" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:link:value }">		<MvASSIGN NAME = "l.attribute:link:value" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:link:targ }">		<MvASSIGN NAME = "l.attribute:link:targ" VALUE = "">		</MvIF>
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'product' }">
			<MvASSIGN NAME = "l.attribute:product" VALUE = "{ miva_array_deserialize( l.attribute:value ) }">
			<MvIF EXPR = "{ ISNULL l.attribute:product:id }">		<MvASSIGN NAME = "l.attribute:product:id" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:product:code }">		<MvASSIGN NAME = "l.attribute:product:code" VALUE = "">		</MvIF>
		<MvELSEIF EXPR = "{ l.attribute:type EQ 'category' }">
			<MvASSIGN NAME = "l.attribute:category" VALUE = "{ miva_array_deserialize( l.attribute:value ) }">
			<MvIF EXPR = "{ ISNULL l.attribute:category:id }">		<MvASSIGN NAME = "l.attribute:category:id" VALUE = "">		</MvIF>
			<MvIF EXPR = "{ ISNULL l.attribute:category:code }">	<MvASSIGN NAME = "l.attribute:category:code" VALUE = "">	</MvIF>
		</MvIF>

	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Layout_Load_Components" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "html, text, compresswhitespace">
	<MvASSIGN NAME = "l.components_count" VALUE = "{ Recursive_Nes_Attack( g.Layout_ID, 0, l.components ) }">
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Output( l.components ) }">
</MvFUNCTION>